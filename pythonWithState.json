["write=temp.txt.js block writeBlockToBrowser",{"word":"return","file":"/home/kdog3682/2023/crayola.js","lang":"js","spaces":"                ","name":"sortWithClusters","date":"04-07-2023","lineNumber":757,"line":"return blendRgbaWithWhite(color)","ext":"js","buffers":["/home/kdog3682/PYTHON/base.py","/home/kdog3682/2023/css-utils.js","/home/kdog3682/2023/utils.js","/home/kdog3682/2023/pdfgen.make.js","/home/kdog3682/2023/elementObjects.js","/home/kdog3682/2023/vueSetup.js","/home/kdog3682/2023/ec.js","cobject.js","crayola.js"],"tail":"crayola.js","blockIndexes":[752,803],"blockText":"function sortWithClusters(colorsToSort) {\n    const mappedColors = colorsToSort\n        .map((color) => {\n            const isRgba = color.includes(\"rgba\")\n            if (isRgba) {\n                return blendRgbaWithWhite(color)\n            } else {\n                return color\n            }\n        })\n        .map(colorUtil.color)\n\n    mappedColors.forEach((color) => {\n        let minDistance\n        let minDistanceClusterIndex\n\n        clusters.forEach((cluster, clusterIndex) => {\n            const colorRgbArr = [\n                color.rgb.r,\n                color.rgb.g,\n                color.rgb.b,\n            ]\n            const distance = colorDistance(\n                colorRgbArr,\n                cluster.leadColor\n            )\n            if (\n                typeof minDistance === \"undefined\" ||\n                minDistance > distance\n            ) {\n                minDistance = distance\n                minDistanceClusterIndex = clusterIndex\n            }\n        })\n\n        clusters[minDistanceClusterIndex].colors.push(color)\n    })\n\n    clusters.forEach((cluster) => {\n        const dim = [\"white\", \"grey\", \"black\"].includes(\n            cluster.name\n        )\n            ? \"l\"\n            : \"s\"\n        cluster.colors = oneDimensionSorting(\n            cluster.colors,\n            dim\n        )\n    })\n\n    return clusters\n}","lineCount":814}]
