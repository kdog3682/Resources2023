
markers               []
lastbuffer            #0
jspyparentdict        {'vim': {'lx': '{ -> '}, 'js': {'lx': '(x) =>'}, 'py': {'lx': 'lambda x:'}}
basejsref             {'pr': 'print cf', 'doYesterday': 'doYesterday', 'op': 'open'}
autotabdict           {'vim': {'ef': '^M<80>kbendif^M'}, 'js': {}, 'py': {}}
learningfile           /home/kdog3682/TEXTS/code.learning.txt
vuedict               {'dataRE': 'const vueData \= \{', 'methodRE': 'methods\: \{'}
qref                  {'dl': 'DateLine', 'anno': 'DoAnnouncement', 'lv': 'GetLastVariable', 's': 'GetAnyLastString', 'd': 'QAppendDirToCursor', 'td': 'QRefToday', 'fn': 'GetFunctionName', 'ls': 'GetLastString'}
jslibref               controller.js
changelogfile          /home/kdog3682/2023/changelog.md
qdict                 {'le': 'class LineEdit', 'r': '    run\(', 'c': '    constructor\(', 'cii': '    constructor\(', 'vl': 'class vuelines', 'rsdf': '    run\('}
globalconfig          {'markit': 1}
A                      => {^@    $c^@}, {})
cwd                    /home/kdog3682/CWF
clipdir                /home/kdog3682/CLIPS/
cwf                    CWF
loaded_zipPlugin       v31
cwfdir                 /home/kdog3682/CWF/
dir_path               /home/kdog3682/2023/
a                     #1
loaded_spellfile_plugin #1
callableRE             \w+\ze\(
fnRE2                  ^(var|(async )?function!?|def|class|const) \zs\w+|^\w+ \= \{ *$
wordplacerdict        {'ref': ['const ref = {^@    $c^@}', 1], 'dict': ['const dict = {^@    $c^@}', 1], 'config': ['const config = {^@    $c^@}', 1]}
jsfndict              {'e1': 'evaluate', 'e2': 'Eater', 'tsa': 'toStringArgument', 'tsc': 'toSnakeCase', 'tsf': 'toStringFunction', 'ieb': 'isEnterBlock', 'a': 'aggregate', 'b': 'brackify', 'c': 'capitalize', 'd': 'difference', 'e': 'exists', 'f': 'findall', 'i': 'indent', 'j': 'joined', 'l': 'len', 'm': 'Matrix', 'n': 'ncg', 'f1': 'flat', 'f2': 'ftest', 'f3': 'find', 'r': 'reduce', 'f5': 'filtered', 'rss': 'removeStartingSpaces', 'u': 'unique', 'v': 'vmap', 'x': 'xsplit', 'z': 'zip', 'pi': 'prepareIterable', 'pj': 'parseJSON', 'pr': 'prepareRegex', 'ps': 'puppetStringify', 'fm': 'fuzzyMatch', 'fo': 'filterObject', 'fp': 'fixPath', 'stp': 'splitThePage', 'fs': 'fixSelector', 'ft': 'fillTo', 'fu': 'fixUrl', 'acp': 'addCssPeriod', 'ta1': 'toArgument', 'ta2': 'toAttr', 'rts': 'reduceToString', 'tsc1': 'toStringCallable', 'gfi': 'getFunctionInfo', 'gfl': 'getFirstLine', 'gfn': 'getFunctionName', 'gfw': 'getFirstWord', 'gc': 'getChunks', 'igf': 'isGetFunction', 'gi': 'getIndent', 'gl': 'getLongest', 'go': 'getOptions', 'gp': 'getParameters', 'gs': 'getSpaces', 'gw': 'getWords', 'r1': 'roygbiv', 'r2': 'replace', 'r3': 'regexgetter', 'r4': 'range', 'r5': 'rescape', 'min': 'modularIncrementNumber', 'tvd': 'toVimDict', 'rac': 'removeAllComments', 'tvv': 'toVimVariable', 'rc': 'removeComments', 're': 'removeExtension', 'ire': 'isRegExp', 'hc': 'hasColon', 'hd': 'hasDash', 'rs': 'removeStrings', 'hg': 'hasGFlag', 'hh': 'hasHtml', 'hn': 'hasNumber', 'tsde': 'toStringDictionaryEntry', 's5': 'search', 's1': 'splitonce', 's2': 'split', 's3': 'stringcall', 's4': 'splitmapfilter', 'sbo': 'sortByOccurence', 's6': 'sorted', 's7': 'sum', 's8': 'singlequote', 's9': 'stringify', 'i1': 'inferlang', 'i2': 'iter', 'i3': 'Iter', 'tme': 'toModuleExports', 'tmi': 'toModuleImports', 'isc': 'isStandardCss', 'tcc': 'toCamelCase', 'ish': 'isStandardHtml', 'ia': 'isArray', 'ib': 'insertBelow', 'ic': 'isCapitalized', 'id': 'isDefined', 'if': 'isFunction', 'ii': 'isInteger', 'in': 'isNumber', 'io': 'isObject', 'gial': 'getIndentAndLine', 'swp': 'startsWithPeriod', 'is': 'isString', 'it': 'insertText', 'iu': 'isUrl', 'iw': 'isWord', 't1': 'trimmed', 't2': 'templater', 't3': 'tryval', 't4': 'toabrev', 't5': 'timestamp', 't6': 'type', 't7': 'tail', 's10': 'sayhi', 'j1': 'jspy', 'j2': 'join', 'fs1': 'findallStrings', 'gsi': 'getStackInfo', 'ta': 'toArray', 'tc': 'toConfig', 'td': 'toDictionary', 'tdc': 'toDashCase', 'tp': 'toPascal', 'ts': 'trimSpaces', 'tv': 'toVariable', 'fsl': 'fixSpaceLength', 'snb': 'splitNumberBoundary', 'p1': 'paired', 'p2': 'pluralize', 'gsfo': 'getSpacesFromOffset', 'u1': 'uncapitalize', 'a1': 'argsplit', 'a2': 'assert', 'a3': 'addf', 'a4': 'abbreviate', 'sd': 'smartDedent', 'p': 'parens', 'q': 'quotify', 'soc': 'splitOptionalComma', 'iae': 'isAllEqual', 'ag': 'addGFlag', 'f4': 'freplace', 's': 'Storage', 'as': 'atSecond', 't': 'test', 'l1': 'linegetter', 'b1': 'boundary', 'f6': 'fparse', 'gul': 'getUniqueLetters', 'lc': 'lineCount', 'le': 'LineEdit', 'ilf': 'isLogicFunction', 'tfr': 'toFunctionRegex', 'bc': 'blockComment', 'gl1': 'getLast', 'ctn': 'coerceToNumber', 'ip': 'isPrimitive', 'm1': 'matchgetter', 'm2': 'matchall', 'm3': 'mreplace', 'gfn1': 'getFunctionNames', 'c1': 'Cache', 'c2': 'Clock', 'c3': 'compose', 'c4': 'comment', 'c5': 'checkjs', 'c6': 'count', 'rfi': 'replaceFromIndex', 'gvfs': 'getVariablesFromString', 'gll': 'getLastLine', 'n2c': 'n2char', 'glw': 'getLastWord', 'mi': 'modularIncrement', 'ce': 'curryEnd', 'cl': 'CodeLibrary', 'cp': 'cartesianProduct', 'cs': 'curryStart', 'btl': 'bringToLife', 'n1': 'noop', 'd1': 'dedent', 'd2': 'doublequote', 'd3': 'dreplace', 'd4': 'depluralize', 'd5': 'datestamp', 'gme': 'getModuleExports', 'hn1': 'hasNewline', 'ina': 'isNestedArray', 'rsws': 'regexStartsWithSpaces', 'stc': 'spaceToCamel', 'ni': 'newlineIndent', 'inl': 'isNewLine', 'dg': 'defineGetter', 'ts1': 'toSpaces', 'ccg': 'countCaptureGroups'}
r                      \w+\ze \=
s                      xcvc
z                     {}
pdfdir                 /home/kdog3682/PDFS/
htmlfile               index.html
invivoconnector       {'read': 'awr', 'split': 'split', 'write': 'awr', 'append': 'awr', 'co': 'co'}
filefunctionref       {'cb': ['/home/kdog3682/.vimrc', 'ChooseBuffer2'], 'reg': ['/home/kdog3682/.vimrc', 'Registrar']}
cssdir                 /home/kdog3682/CWF/public/
pk                    ['implicit', 'string', 'clip', 'ws2draft', 'ws2final']
ParensRef             {'braces': ['[', ']'], 'parens': ['(', ')'], '[]': ['[', ']'], 'newline': ['^@', '^@'], '()': ['(', ')'], '{}': ['{', '}'], 'brackets': ['{', '}']}
shuntbuffer            storage.py
suncaller              ToShortName('a.bBC')
gtfgtfdict            {'cr': ['/home/kdog3682/CWF/public/utils.js', 'getBindingName', [0, 1564, 1, 0]], 'usps first class stamp': ['/home/kdog3682/CWF/questions.txt', '', [0, 3, 190, 0]], 'md': ['/home/kdog3682/CWF/public/math-components.js', 'DrillerA', [0, 787, 1, 0]], 'exclam for': ['/home/kdog3682/CWF/public/mc.js', 'VGuidedMultiplication', [0, 2703, 16, 0]], 'crr': ['/home/kdog3682/CWF/public/code-runner.js', 'VueDisplayCallbacks', [0, 11, 5, 0]], 'reddit': ['/home/kdog3682/CWF/public/m1.js', '', [0, 115, 1, 0]], 'gf': ['/home/kdog3682/.vimrc', 'GTFGTF', [0, 2670, 49, 0]], 'iframe': ['/home/kdog3682/CWF/public/utility-components.js', 'IframeComponent', [0, 130, 9, 0]], 'run': ['/home/kdog3682/CWF/public/cm.js', 'languageRef', [0, 979, 5, 0]], 'google': ['/home/kdog3682/CWF/public/me.blog', '', [0, 829, 1, 0]]}
sti                   #0
server_html_index     #0
vueaddtransitiondict  {'elif': ['else if{', '}'], 'else': ['else {', '}'], 'temp': ['<template v-if="">', '</template>', '<template v-else>', '</template>'], 'if': ['if (sdfsdfsdf) {', '}'], 'a': ['[', '],'], 'f': ['function foo(s) {', '}'], 'sx': ['s = `', '`'], 'transition': ['<transition name="fade" mode="out-in">', '</transition>'], 'd': ['<div class="">', '</div>'], 'today': ['function today${MonthDay()}() {', '}'], 'tg': ['<transition-group name="fade" mode="out-in">', '</transition-group>'], 't': ['<template v-if="">', '</template>'], 'div': ['<div>', '</div>'], 'o': ['[', '],']}
codenotefile           code.notes.txt
loaded_gzip           #1
templines             []
loaded_2html_plugin    vim8.1_v2
zoopdict              {'red': 'reduce((acc, item) => {^@    $c^@}, {})'}
jspyref2              {'txt': {'executeShellTemplate': '!clear; node ', 'normalizeDirPath': '/home/kdog3682/2023/TEXTS/'}, 'js': {'trycatch': {'below': ['} catch(e) {', '    console.log("ERRORRRRRRRR", e.stack)', '}'], 'above': ['try {']}, 'big-quote': '`', 'snippetDict': 'pydict', 'executeShellTemplate': '!clear; node ', 'VimShellName': 'Node', 'bindingRE': '(var|const|class|(async )?function) ', 'const': 'const ', 'bookmark_template': '/* @bookmark $1 */', 'file-function-ref': {}, 'defaultLangFile': 'utils.js', 'compiler': 'node', 'normalizeDirPath': '/home/kdog3682/2023/', 'commentPrefix': '// ', 'appendBottomTemplate': 'console.log($2())'}, 'user': {'big-quote': '"""'}, 'html': {'normalizeDirPath': '/home/kdog3682/2023/', 'defaultLangFile': 'index.html'}, 'pdf': {'normalizeDirPath': '/home/kdog3682/PDFS/'}, 'vim': {'trycatch': {'below': ['catch', '    let error = v:exception', '    ', 'endtry'], 'above': ['try']}, 'big-quote': '"""', 'appendBottomTemplate': 'let g:execRef[''$1''] = ''call $2()''', 'bindingRE': 'function!? ', 'const': 'let ', 'file-function-ref': {'py4': ['vimrc', 'PySnippet4'], 'reg': ['/home/kdog3682/.vimrc', 'Registrar'], 'cb': ['/home/kdog3682/.vimrc', 'ChooseBuffer2']}, 'bookmark_template': '" @bookmark $1', 'snippetDict': 'vimdict', 'normalizeDirPath': '', 'commentPrefix': '" ', 'defaultLangFile': '/home/kdog3682/.vimrc'}, 'md': {'commentPrefix': ''}, 'py': {'trycatch': {'below': ['except Exception as e:', '    ', ''], 'above': ['try:']}, 'big-quote': '"""', 'snippetDict': 'pythonsnippets', 'executeShellTemplate': '!clear; python3 ', 'VimShellName': 'Python', 'bindingRE': '(def|class) ', 'const': '', 'bookmark_template': '# @bookmark $1', 'file-function-ref': {}, 'defaultLangFile': 'base.py', 'compiler': 'python3', 'normalizeDirPath': '/home/kdog3682/PYTHON/', 'commentPrefix': '# ', 'appendBottomTemplate': 'env.basepyref[''${Abrev($1)}''] = ''$1'''}, 'css': {'normalizeDirPath': '/home/kdog3682/CWF/public/', 'defaultLangFile': 'base.css'}, 'base-components.js': {'appendBottomTemplate': 'vuePreview($1)'}, 'math': {'normalizeDirPath': '/home/kdog3682/MATH/'}, 'json': {'normalizeDirPath': '/home/kdog3682/JSONS/'}, 'worksheet-components.js': {'appendBottomTemplate': 'previewComponentTemplate($1)'}, 'asd': {'commentPrefix': ''}, 'vimrc': {'appendBottomTemplate': 'let g:execRef["$1"] = "call $1()"'}, 'log': {'normalizeDirPath': '/home/kdog3682/LOGS/'}}
globalState           {}
ifwin                  if(typeof window!=='undefined'){module={};module.exports={};require=()=>({})}
loaded_getscriptPlugin  v36
dirdict2              {'txt': '/home/kdog3682/TEXTS/', 'log': '/home/kdog3682/LOGS/', 'js': '/home/kdog3682/CWF/public/', 'json': '/home/kdog3682/JSONS/', 'py': '/home/kdog3682/CWF/', 'html': '/home/kdog3682/CWF/public/', 'pdf': '/home/kdog3682/PDFS/', 'css': '/home/kdog3682/CWF/public/', 'math': '/home/kdog3682/MATH/'}
jsdict                {'else': 'else {', 'vt': {'template': 'template: `^@    ^@`,', 'suffix': ''}, 'forkjiii': '', 'forkijiii': '', 'ift': 'if (test($0)) {', 'try': 'try {^@}^@catch(e) {', 'fori': 'for (let i = 0; i < $0; i++) {', 'efn': 'else if (!$0) {', 'fork': 'for (let key of Object.keys($0) {', 'border': 'border: 0.5px solid red;', 'efs': 'else if (isString($0)) {', 'ifn': 'if (!$0) {', 'forkv': 'for (let [k, v] of Object.entries($0)) {', 'len': 'print(''length of $0:'', len($0))', 'props': {'snippet': 'props: $0,', 'noappend': 1, 'functions': 'ArrayExpand'}, 'forv': 'for (let value of Object.values($0) {', 'if': 'if ($0) {', 'dict': 'const dict = {', 'eft': 'else if (test($0)) {', 'items': 'const items = [', 'arr': 'const arr = [', 'ifa': 'if (isArray($0)) {', 'c': 'class $0 {^@    constructor($1) {^@    }', 'ifs': 'if (isString($0)) {', 'for': [1, 'for (let $a of $0) {', function('<lambda>914')], 'div': {'template': '<div>$c</div>', 'cursor': 'smart', 'suffix': ''}, 'lbr': '$$JSPY(''comment'')$$ --------------------------', 'obj': 'const obj = {', 'm': 'method $0($1) {', 'ifo': 'if (isObject($0)) {', 'vc': {'template': 'computed: {^@    ^@},', 'suffix': ''}, 'vd': {'template': 'data() {^@    return {^@        %c^@    }^@},', 'suffix': ''}, 'st': {'snippet': 'setTimeout(() => {^@    %c^@}, $0)'}, 'while': 'while {^@}', 'class': {'snippet': 'class $0 {^@    constructor($1) {^@    }', 'functions': ['Capitalize', 'Identity']}, 'vm': {'template': 'methods: {^@    ^@},', 'suffix': ''}, 'efa': 'else if (isArray($0)) {', 'efo': 'else if (isObject($0)) {', 'vp': 'Vue.prototype.$$0 = function($1) {', 'ef': 'else if ($0) {'}
kdoghtml               /home/kdog3682/CWF/public/r6.html
dict                  {'a': 1, 'b': 2}
regexarr              [['dotu', '.*?'], ['ncg', '(?:'], ['ss', '^ *'], ['spc', ' '], ['dq', '\\""'], ['sq', '\\'''], ['bou', '\\b'], ['az', '[a-zA-Z]+'], ['wdd', '\w[\w.-]+'], ['wd', '\w[\w-]+'], ['cwallu', '([\w\W]+)'], ['wallu', '[\w\W]+'], ['pfc', '(?:def|class)'], ['jfc', '(?:(?:async )?function|class)'], ['pla', '(?='], ['nla', '(?!'], ['plb', '(?<='], ['nlb', '(?<!'], ['cw', '(\w+)'], ['w8', '\w*'], ['lp', '\('], ['rp', '\)'], ['qre', '(?<=[\''\"]).*?(?=[''\"])'], ['cqre', '[\''\"](.*?)[\''\"]'], ['8', '*'], ['6', '^'], ['0', ')'], ['4', '$'], ['cdotu', '(.*?)'], ['dot', '.*'], ['cdot', '(.*)'], ['w', '\w+'], ['W', '\W+'], ['s', '\s+'], ['S', '\S+'], ['n', '\n'], ['q', '?'], ['d', '\d+'], ['p', '+'], ['or', '|'], ['dor', 'xxxx'], ['osr', 'xxxx']]
lastname               
iabmathdict           {'p': ' + ', 'q': '^2', 't': ' * ', 'e': '^', 'big': 'expand ', 'div': ' ÷ ', '=': ' = ', 'sim': 'simplify ', '-': ' - '}
markdict              {'': 'M', 'ObjectStorage': 'G', 'BookmarkManager': 'K', 'RegexBuilder': 'H', 'FileGetter2': 'J', 'ExpressionMaster': 'L', 'Storage': 'F', 'PySnippet': 'I', 'CreateFunctionBlock': 'D'}
autodict              {}
vimsnippets           {'pcfadd': 'def __add__(self, $2):^@    ', 'line': 'let line = CurrentLine()', 'pcfcall': 'def __call__(self, $2):^@    ', 'head': 'let head = Head()', 'block': 'let block = GetCodeBlock()', 'upline': 'let upline = UpLine()', 'name': 'let name = GetBindingName()', 'bm': '${Timestamp($1)}', 'pcfiter': 'def __iter__(self, $2):^@    ', 'lang': 'let lang = GetLang()', 'js': 'AddPydictItem', 'last': 'let last = GetLastBinding()', 'pcffn': 'def $1($2):^@    ', 'er': 'let g:execRef["${Abrev($1)}"] = "$1"', 'bc': 'BetterConsole', 'dep': 'throw ''deprecation''', 'link': 'let g:filedict["link"] = "$1"', 're': 'RegexBuilder', 'index': 'let index = GetFunctionIndex()', 'e': 'let e = GetExtension()', 'f': 'let g:filedict[''temp''] = ''$1''', 'i': 'SnippetActionJsImport', 'emptyFunction': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'word': 'let word = GetCurrentWord()', 'context': 'let context = GetContext2()', 'hk': 'if has_key($1, ''$2'')^@    $c^@endif', 'w': 'while 1^@    $c^@endwhile', 'ht': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'cur': 'let cursor = GetCursor()', 'file': 'let file = CurrentFile()', 'spaces': 'let spaces = CurrentSpaces()', 'lines': 'let lines = NameMaker()', 'fd': 'let g:filedict["$1"] = "$2"', 'for': 'for item in $1^@    $c^@endfor', 'date': 'let date = DateStamp()', 'ar': 'MakeStringArray2023', 'vt': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'ax': 'b g asd', 'pcfclass': 'def $1(self, $2):^@    ', 'pr': 'props: {^@    $1: {default: ''''},$c^@}', 'if': 'if $1^@    $c^@endif', 'no': 'nnoremap $1 :call $2()<CR>', 'dict': 'MakeStringDict2023', 'de': 'DictEntry2', 'cursor': 'let cursor = GetCursor()', 'tpl': 'UnloadSavedWordsOnTemplate', 'asd': '/* ${Tail(g:filedict[$0])} */'}
indexesdict           {'notes': 'GetNoteIndexes', 'innerfunction': 'GetInnerFunctionIndexes'}
pysnippet4ref         [['mapx?$', '$0map((${GetXName($0)}, i) => {^@    $c^@})'], ['fe$', '$0forEach((${GetXName($0)}, i) => {^@    $c^@})'], ['v$', '${GetXStart($0)}'], ['exi$', '$0every((${GetXName($0)}, i) => {^@    $c^@})'], ['somex$', '$0some((${GetXName($0)}, i) => {^@    $c^@})'], ['^ *s *$', 'style {^@    $c^@}'], ['oa$', '${CreateObjectArray($0)}'], ['on \w+$', '$0on(''$2'', (e) => {^@    $c^@})'], ['srep$', '$0s.replace(//g, (x) => {^@    $c^@})'], ['l\d$', 'f:Snip4Len'], ['vars\w+$', 'f:PythonVarsHandler'], ['^ *\w+s$', 'const $1 = [^@    $c^@]'], ['\/st\zs\d+$', 'setTimeout(() => $0, $1)'], ['\zszoo$', '${ZStringPipe($0)}'], ['arrc$', '${LineToArray($0)}'], ['arr$', '${ToStringArray($0)}'], ['\/s$', '${LineToString($0)}'], ['(ms?)$', '${ZoopMethod2($0, $1)}'], ['zzda$', '${DoubleArraySnippet($0)}'], ['da$', '$0[^@    [$c],^@    [],^@]'], ['d$', '${LineToDict($0)}'], ['p$', '$0{^@    props: {^@        $c^@    }^@})'], ['vd$', '${VueDictify($0)}'], ['vvvvd$', 'f:VueDictify'], ['asdftar$', '$0abc'], ['(template)$', 'template: `^@    <div>^@        $c^@    </div>^@`,'], ['(watch|computed|methods)$', '$1:{^@    $c^@},'], ['(data|mounted|created)$', '$1(){^@    $c^@},'], ['\.g\zs\w+$', '$0.get(''$1'')'], ['get \zs\w+$', 'get $1(){^@    $c^@}'], ['redstrab', '$0reduce((acc, [a,b]) => {^@    $c^@, ''''})'], ['redstr', 'aaaaaaaaaaaaaa'], ['(red|map|filter|fe|f)\w*$', '$0${ZoopbarArrMethods($1)}'], ['kv$', '(k, v) => {^@    $c^@})'], ['\.a$', 'const $0 = [^@    $c^@]'], ['x$', '$0($1) => {^@    $c^@})'], ['fa$', 'let matches = findall(re, s)^@console.log(matches)^@return'], ['ls$', '() => {^@    $c^@}'], ['while$', 'while (true) $B'], ['runner *$', 'const runner = () =>$B'], ['\w*(dict|ref)$', 'const $1 = $B']]
previabdict           {}
userdict              {}
pydict                {'abcl': 'abc = [''a'', ''b'', ''c'', ''d'', ''e'']', 'abco': 'abc = {''a'': ''a'', ''b'':''b'', ''c'': ''c'', ''d'': ''D'', ''e'': ''e''}', 'rredkv': 'return reduce($1, (k, v) => {^@    $c^@})', 'nullcache': 'const cache = Object.create(null)', 'tss': 'const $1 = this.$store.state.$1', 'ifr': 'if (isRegExp($1)) $c', 'forvals': 'for (let key of Object.keys($1)) {^@    $c^@}', 'ifs': 'if (isString($1)) {^@    $c^@}', 'script': '<script>^@$c</script>', 'iffile': 'if (isfile($1)) $c', 'nestobj': '{a:1, b:2, c:{d:{e: [{g: 1}]}}}', 'ifnum': 'if (isNumber($1)) {^@    $c^@}', 'rpwo': 'rpwo(''$1'', (s) => {^@    $c^@})', 'ef': 'else if ($0) {^@    $c^@}', 'ifswn': 'if (startsWithNumber($1)) {^@    $c^@}', 'abc': 'abc = ''abcde''.split('''')', 'a': 'var $1 = [^@    $c^@]', 'b': 'border: 0.5px solid blue;$c', 'c': 'class ${Capitalize($1)} {^@    constructor($c) {^@    }^@}', 'd': '${SnippetDivMaker($1, $2, $3, ''short'')}', 'e': 'const editor = new TextEditor($1)^@', 'f': 'function f${MonthDay()}() {^@    /* $c */^@}', 'i': 'SnippetActionJsImport', 'm': 'const m = findall(r, s)', 'o': 'var $1 = {^@    $c^@}', 'p': '<p style="color: red">HIII</p>', 'r': 'var {${ JoinComma($notlast) }} = require(''./$last.js'')', 'her': 'const options = {^@    class: ''zork''^@}^@const component = h(''div'', options, $c)^@return component', 't': 'setTimeout(() => {^@    $c^@}, $1)', 'u': '${UseHelper($1)}', 'v': '${Vdiv($0, 1)}', 'efnum': 'else if (isNumber($1)) {^@    $c^@}', 'scrip': '<script src="$1"></script>', 'bml': '/** $c **/', 'ifnest': 'if (isNestedArray($1)) $c', 'vue': 'new Vue({^@    template: `^@        $c^@    `,^@    data() {^@        return {^@            //foo:''boo''^@        }^@    }^@}).$$mount(''#app'')', 'get': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'ifa': 'if (isArray($1)) {^@    $c^@}', 'pr': 'props: {^@    $1: {default: ''''},^@}$c', 'vprop': 'props: ${ArrayExpand($0)},', 'ife': 'if (exists($0)) {^@    $c^@}', 'iff': 'if (isFunction($1)) {^@    $c^@}', 'amo': 'async mounted() {^@    console.log(''hello from ${GetBindingName()}'')^@    await sleep(1000)^@    $c^@},', 'ifn': 'if (!$0) {^@    $c^@}', 'ifo': 'if (isObject($1)) {^@    $c^@}', 'foo': 'function foo${MonthDay()}() {^@    $c^@}', 'fs': 'fs = require(''fs'')', 'data': 'data() {^@    return {^@        fooba: ''hi'',^@        $c^@    }^@},^@', 'ift': 'if (test($1, $2)) {^@    $c^@}', 'ifu': 'if (isUndefined($1)) $c', 'ifnt': 'if (!test(${ZoopbarTestVar($0)})) ', 'mapkv': 'map($1, (k, v) => {^@    $c^@})', 'cng': 'const [$c] = context.numbergen.create()', 'today': 'function today${MonthDay()}() {^@    /* $c */^@}', 'dict': 'MakeStringDict2023', 'rts': 'reduceToString($1, (k,v) => {^@    $c^@})', 'input': '<input @keydown.enter=''onEnter''/>', 'class': 'class ${Capitalize($1)} {^@    constructor($c) {^@    }^@^@}', 'button': '<button class="">$c</button>', 'rsr': 'return s.replace($1, (x) => {^@    $c^@})', 'rjs': 'var {toDashCase,ncg,toArgument,rescape,splitonce,newlineIndent,toDictionary,fparse,match,isIterable,pop,toStringArgument,ncgRunner,getExtension,merge,Storage,reduceObject,assert,bringToLife,templater2,isWord,getStackTrace,gatherArgs,linegetter,getCaller,getParameters,isRegExp,len,type,getLongest,parse,toStringFunction,wrap,filter,brackify,walker,isNestedArray,quotify,ftest,flat,join,stringify,range,indent,partition,singlequote,rng,parens,unique,templater,map,push,smallify,getLast,mreplace,prepareIterable,isPrimitive,findall,replace,capitalize,reduce,split,exists,isNumber,search,isFunction,isString,isObject,isArray,test, char2n, n2char} = require("./utils.js")', 'vuech': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    render(h) {^@        $c^@    },^@}', 'lambda': 'return function lambda(s) {^@    $c^@}', 'vueco': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@    <div>^@        $c^@    </div>`,^@    data() {^@        return {^@            ^@        }^@    },^@}', 'co': '{^@    type: ''story'',^@    value: [^@        $c^@    ],^@},', 'dog': 'foo bar', 'vuect': 'const ${Capitalize($1)} = {^@    components: {},^@    name: ''${Capitalize($1)}'',^@    async mounted() {^@        console.log(''Mounted from ${Capitalize($1)}'')^@        await sleep(1000)^@    },^@    props: [''''],^@    template: `<div class="${Capitalize($1)}">^@        <div>$c</div>^@        <div></div>^@    </div>`,^@    data() {^@        return {^@            //foo:''boo''^@        }^@    },^@    methods: {^@        foo() {^@        ^@        },^@    },^@    computed: {^@        computedProp() {^@        ^@        },^@    },^@    watch: {^@        ^@    },^@}', 'qq': 'question: ''$c'',', 'nu': 'import { writeUnitTest, readUnitTest, read, clip, appendVariable, write, rpw, isFile, sysget, } from "./node-utils.js"', 'vfor': '<div class="abc" v-for="${Slice($1)} in $1">^@    $c^@</div>', 'whereami': '/*  ${FullTimeStamp()}^@    --------------------------------------------^@    $c^@    --------------------------------------------^@*/', 'com': 'component: ''v-mixed'',^@props: {^@    value: ''$c'',^@},', 'coo': 'const options = {^@    fooo: '''',^@}^@$c', 'ifew': 'if ($1.endsWith($2)) $c', 'h1': '<button class="">$c</button>', 'fooboo': 'function foo() {^@    $1^@}^@^@function boo() {^@    foo()^@}^@', 'eff': 'else if (isFunction($1)) {^@    $c^@}', 'ref': 'const ref = {^@    $c^@}', 'vueno': 'Vue.component(''$1'', { template: ''<div class="$1">$1</div>'' })', 'efo': 'else if (isObject($1)) {^@    $c^@}', 'boo': 'if (isFunction(x)) {^@    $c^@}^@^@else if (isArray(x)) {^@    ^@}^@^@else if (isString(x)) {^@    ^@}^@^@else if (isObject(x)) {^@    ^@}', 'efs': 'else if (isString($1)) {^@    $c^@}', 'eft': 'else if (test($2, $1)) {^@    $c^@}', 'ifodd': 'if (isOdd($1)) {^@    $c^@}', 'fpdf': 'from FPDF import fpdf^@fpdf.add_page()^@fpdf.add_font(''symbola'', '''', ''/home/kdog3682/CWF/Symbola.ttf'', uni=True)^@fpdf.set_font(''symbola'', '''', 11)', 'utils': 'var {^@    ^@} = require(''/utils.js'')', 'mounted': 'mounted() {^@    $c^@},', 'rc': 'Vue.component(''$1'', {^@    render(h) {,^@        $c^@    }^@})', 'config': 'const config = {^@    $c^@}', 'for': 'for (let ${GetForIterationVariable($1)} of $1) {^@    $c^@}', 'str': '$1String${MonthDay()} = `^@    $c^@`', 'vuediv': '<div id="app">^@    $c^@</div>', 'hd': 'const $1 = h(''div'', $2, $3)', 'nerd': 'nerdamer = require("nerdamer/all.min")', 'vmo': 'mounted() {^@    $c^@},', 'vms': 'let line = CurrentLine()^@let r = $c^@let m = Search(line, r)', 'ht': 'var ${Pascal($1)} = {^@    name: ''${Pascal($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'qao': '{^@    only: 1,^@    question: "$c",^@    answer(answer, context) {^@    ^@    },^@},', 'qas': '{^@    question: "$c",^@    answer: "",^@},', 'init': 'def __init__($1):^@    $c,', 'html': '<!DOCTYPE html><html>^@    $c^@</html>', 'ox': '{^@    $c,^@},', 'webscript': '<script src="$0"></script>', 'jsc': 'console.log(JSON.stringify($c))', 'wami': '/*  ${FullTimeStamp()}^@    --------------------------------------------^@    $c^@    --------------------------------------------^@*/', 'tpl': 'UnloadSavedWordsOnTemplate', 'lines': 'const lines = lineGetter(s)', 'divc': '<div>^@    $c</div>', 'cidfgdc': 'Vue.component(''$1'', {^@    data() {^@        return {^@            $c^@        }^@    },^@    methods: {^@^@    },^@    computed: {^@^@    },^@    watch: {^@^@    },^@    mounted() {^@^@    },^@    render(h) {^@^@    }^@}', 'jsx': 'console.log(JSON.stringify($1))', 'retcom': 'return {^@    component: '''',^@    value: ''''^@}', 'emptyFunction': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'fetch': 'const fetch = require(''node-fetch'')', 'sf': 'function s(s) {^@    $c^@}', 'psc': 'StateContainer.prototype.$1 = function($2) {^@     $c^@}', 'si': 'intervalID = setInterval(() => {^@    $c^@}, $0)', 'while': 'while ($1) {^@^I^@}', 'ss': 'const items = split(s, '' '')', 'if': 'if ($0) {^@    $c^@}', 'ig': 'const $1 = [${F1($middle)}]^@if ($1.includes($last)) {^@    $c^@}', 'katex': '<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css" integrity="sha384-Um5gpz1odJg5Z4HAmzPtgZKdTBHZdw8S29IecapCSB31ligYPhHQZMIlWLYQGVoc" crossorigin="anonymous"><script src="https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.js" integrity="sha384-YNHdsYkH6gMx9y3mRkmcJ2mFUjTd0qNQQvY9VYZgQd7DcN7env35GzlmFaZ23JGp" crossorigin="anonymous"></script>', 'iu': 'if (typeof $1 == ''undefined'') $c', 'main': 'main(`^@$c^@`)', 'forkeys': 'for (let key of Object.keys($1)) {^@    $c^@}', 'render': 'render(h) {^@    $c^@},', 'link': '<link rel="stylesheet" href="$1"/>', 'writer': 'from storage import write^@write(''temp.txt'', $1)', 'clip': 'import { clip, appendVariable } from "./node-utils.js"', 'forer': 'for (let i = $1.length - 1; i >= 0; i--) {^@    let ${$1[:-2]} = $1[i]^@    $c^@    if (i == 0) {^@        ^@    }^@}', 'enter': 'def __enter__(self):^@    return self^@def __exit__(self, error, *args):^@    $c', 'tg': 'TgCols', 'ifthrow': 'if (!$1) throw ''$1 doesnt exist''', 'tx': 'setTimeout(() => {^@    $c^@}, $1)', 'lam': 'const $1 = (x) => {^@    $c^@}', 'qa': '{^@    question: "$c",^@    answer(answer, context) {^@    ^@    },^@},', 'js': 'AddPydictItem', 'center': 'display: flex; align-items: center; justify-content: center;$c', 'vredkv': 'const value = reduce($1, (k, v) => {^@    $c^@})', 'slot': '<slot name=''''>^@    $c^@<slot/>', 'fori1': 'for (let i = 1; i <= $1; i++) {^@    $c^@}', 'crw': 'const children = this.value.map((item, i) => {^@    $c^@})^@return renderWrapper(this, children)', 'sleep': 'await sleep(1000)', 'pcd': 'if (productionConfig.debug) {^@    ${Rep192($1)}^@}', 'ifewn': 'if (endsWithNumber($1)) {^@    $c^@}', 'node': 'var {^@    ^@} = require(''/node-utils.js'')', 'ifal1': 'if (arguments.length == 1) {^@    $c^@}', 'ifal2': 'if (arguments.length == 2) {^@    $c^@}', 'ifal3': 'if (arguments.length == 3) {^@    $c^@}', 'ifal4': 'if (arguments.length == 4) {^@    $c^@}', 'redx': 'reduce($1, (x) => {^@    $c^@})', 'rnl': '    print(key, args)^@    globals().get(key)(*args)', 'forsto': 'for (let [k,v] of storage) {^@ $c^@}', 'wh100': 'width: 100%; height: 100%;$c', 'ifalg1': 'if (args.length > 1) {^@    $c^@}', 'vinput': '<input class="input">{{$1}}</input>', 'forii': 'for (;;) {^@    $c^@}', 'forij': 'for (let i = 0; i < $1; i++) {^@    for (let j = 0; j < placeholder; j++) {^@        $c^@    }^@}', 'deps': 'var { test, parseJSON, sorted, getLast, merge, isObject, exists, findall, toArgument, isFunction, isPrimitive, isString, ftest, isNumber, removeAllComments, search, assert, fixPath, fixPath, datestamp, write} = require(''./utils.js'')', 'lom': 'const $1 = ($2) => {^@    $c^@}', 'forir': 'for (let i = $1; i >= 0; i--) {^@    $c^@}', 'hdiv': 'return h(''div'', ''hi'')', 'kf': '${KeyFramer($0)}', 'vhtml': '<script src="vue.js"></script>^@<link rel="stylesheet" href="styles.css"/>^@<script src="script.js"></script> ^@^@<body>^@    <div id="app"></div>^@</body>^@', 'dir': 'directives: [^@    {^@        name: $c^@        value: ^@    },^@],', 'arr': '${ToArray($0)}', 'switch': 'switch ($1) {^@    $c^@}', 'div': '<div class="$1"></div>', 'ai': '[^@    '''',^@    ''$c''^@],', 's': 'let ${DateString($1)} = `^@    $c^@`', 'redkv': 'reduce($1, (k,v) => {^@    $c^@})', 'csl': 'cssLoader(`^@^I$c^@`)', 'ar': 'MakeStringArray2023', 'css': '$1 {^@    $c^@}', 'vuec': 'const $1 = {^@    props: [],^@    template: `^@        <div>^@        $c^@        </div>^@    `,^@    data() {^@        return {^@            ^@        }^@    },^@}', 'w': 'while (true) {^@^I^@}', 'for2': 'for (let i = 0; i + 1 < $1; i += 2) {^@    $c^@}', 'vuen': 'const ${Capitalize($1)}Component = {^@    props: [''value''],^@    template: `$c`,^@        ^@    data() {^@        return {^@            message: ''hi'',^@        }^@    },^@^@}', 'vueo': 'const $1 = {^@    props: [],^@    template: `^@        <div>^@        $c^@        </div>^@    `,^@    data() {^@        return {^@            ^@        }^@    }^@}', 'vuer': 'const ${Capitalize($1)}Component = {^@    props: [''value''],^@    render(h) {^@        $c^@    },^@^@}', 'lami': 'const $1 = (x, i) => {^@    $c^@}', 'ifeven': 'if (isEven($1)) {^@    $c^@}', 'ren': 'return h($1, {^@    key: i,^@    props:  {^@        focusIt: i == arr.length - 1,^@        $c,^@    }^@})', 'rep': 'let p = s.replace($0, (x) => {^@    $c^@})', 'req': 'var {^@${Indent(join(split($1, ''-''), '',^@''))}^@} = require(''${FileGetter2($2)}'')', 'vb': '<button class="btn" @click="$1">$1</button>', 'vc': 'const $1 = {^@    template: ${tolower($1)}template,^@    data() {^@        return {^@            $c^@        }^@    },^@    methods: {^@^@    },^@    computed: {^@^@    },^@    mounted() {^@^@    },^@}', 'vd': 'data() {^@    return {^@        $c^@    }^@},', 'st': 'setTimeout(() => {^@    $c^@}, $0)', 'vh': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''''],^@    render(h) {^@        $c^@    }^@}', 'vm': 'methods: {^@    $c^@},', 'vo': 'var $1 = {^@    $c^@}^@', 'vp': 'Vue.prototype.$$1 = function($2) {^@    $c^@}', 'vt': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'fore': 'for (let i = 0; i < $1.length; i++) {^@    let ${$1[:-2]} = $1[i]^@    $c^@    if (i == $1.length - 1) {^@        ^@    }^@}', 'vdiv': '<div class="$1">{{$1}}</div>', 'vx': 'var V${Pascal($1)} = vrFactory(''V${Pascal($1)}'')^@function vrParse${Pascal($1)}({value}) {^@    ^@}', 'fori': 'for (let i = 0; i < $1; i++) {^@    $c^@}', 'forj': 'for (let j = 0; j < $1; j++) {^@    $c^@}', 'fork': 'for (let key of Object.keys($1)) {^@    $c^@}', 'ass': 'assert($1, "$1 is required")', 'bc': '${BetterConsole($0)}', 'props': 'props: [''$c''],', 'forv': 'for (let key of Object.keys($1)) {^@    $c^@}', 'spk': 'speak(''$1'')', 'bm': '${Timestamp($1)}', 'write': 'write(${PyWriteHelper($0)})', 'doctype': '<!DOCTYPE html><html><body></body><script src="$c"></script><script src="create.js"></script></html>', 'body': '<body>^@    $c^@</body>', 'npm': 'const $1 = require("$1")', 'crng': 'const n = context.numbergen.create(1)', 'ndy': 'console.log(''ndy'')', 'wae': 'window.addEventListener(''keydown'', $1)', 'comn': 'const r = /^$c/gm^@const matches = findall(r, s)', 'comp': '{^@    component: ''v-mixed'',^@    props: {^@        value: ''$c''^@    },^@    style:'''',    ^@},', 'forenum': 'for (let i = 0; i < $1.length; i++) {^@    let ${Slice($1, 1)} = $1[i]^@    $c^@    if (i == $1.length - 1) {^@        ^@    }^@}', 'rpw': 'function foo${MonthDay()}() {^@    function runner(s) {^@        $c^@    }^@    rpw(''${FileGetter2($1)}'', runner)^@}^@foo${MonthDay()}()', 'vuenoxxx': 'Vue.component(''$1'', {^@    props: [''value''],^@    template: `<div class="$1">$1</div>$c`,^@        ^@    data() {^@        return {^@            message: ''hi'',^@        }^@    },^@})', 'ifnull': 'if (isNull($1)) $c', 'wc': '/*^@    $c^@*/', 'methods': 'methods: {^@    $c^@},', 'wh': function('WhileHandler'), 'forab': 'for (let [a, b] of $1) {^@    $c^@}', 'forkv': 'for (let [k, v] of Object.entries($1)) {^@    $c^@}', 'efa': 'else if (isArray($1)) {^@    $c^@}', 'mo': 'mounted() {^@    console.log(''hello from ${GetBindingName()}'')^@    $c^@},', 'cc': '    console.clear()', 'ce': 'class ${Capitalize($1)} extends ${Capitalize($2)} {^@    constructor($c) {^@    super()^@    }^@}', 'cl': 'console.log(''Line: $lineNumber $1:'', $1)$c', 'imp': 'import {^@    $1,^@    ^@} from "./node-utils.js"', 'runner': 'const runner = ($1) => {^@   $c^@}', 'cp': 'computed: {^@    $c^@},', 'cv': 'computed: {^@    computedValue() {^@        $c^@    },^@},', 'prom': 'return new Promise((resolve) => {^@    $c^@})', 'new': '(new ${Capitalize($1)}($c))', 'jshint': 'const JSHINT = require(''./jshint.js'')', 'computed': 'computed: {^@    computed${Capitalize($1)}() {^@        $c^@    },^@},', 'bug': 'bug(${GetBindingName()})', 'efn': 'else if (!($0) {^@    $c^@}', 'win': 'if (typeof window !== ''undefined'') { module = {}; module.exports = {}; require = () => ({}) }', 'type': 'if (typeof $1 != ''undefined'') {^@    $c^@}^@', 'log': '$1^@console.log($c)', 'xl': 'console.log({LINE: ${line(''.'')}, CALLER: "${GetBlockContext()}", VALUE: $1})', 'vimf': '/home/kdog3682/.vimrc', 'vmap': 'const children = $1.map((child,i) => {^@    return h($c)^@})^@^@const parentOptions = {^@    foo: ''''^@}^@return renderWrapper(this, parentOptions, children)', 'forij1': 'for (let i = 1; i < $1; i++) {^@    for (let j = 1; j < $100; j++) {^@        $c^@    }^@}', 'ifd': 'if (isDefined($1)) {^@    $c^@}', 'np': 'return new Promise((resolve) => {^@    $c^@})', 'src': '<script charset="utf8" src="$1"></script>', 'df': '<ul class="$1">^@    <span v-for="$1">$c</span>^@</ul>', 'rkv': 'return Object.entries($1).reduce((acc, item, i) => {^@    $c^@}, {})', 'vim': 'let file = ''/home/kdog3682/.vimrc''', 'dt': '<!DOCTYPE html><html><body></body><script src="create.js"></script></html>', 'iflast': 'if (getLast($1) == $2)', 'process': 'const process = require(''process'')', 'use': '${UseHelper($1)}', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self${AddParams($2)}$c):'}
vueco                  var ${Capitalize($1)} = {^@    name: '${Capitalize($1)}',^@    props: ['value'],^@    template: `^@    <div>^@        $c^@    </div>`,^@    data() {^@        return {^@            ^@        }^@    },^@}
functionlookaheadRE    ^(function|^def) \zs(\w+)
movementsnippetdict   {'asdf': 'asdf', 'el': {'regex': '} *$', 'cursor': 2, 'payload': ['else {', '    ', '}'], 'indentation': 0}}
txtdict               {'script': '<script>^@$c^@</script>', 'get': '${GetTextIniItems($1)}', 'body': '<body>^@$c^@</body>'}
fastfiles             {'6': {'quiz.txt': '/home/kdog3682/2023/parse.js', 'parse.js': 'quiz.txt', 'default': '/home/kdog3682/2023/worksheet-components-2.js'}, '7': '/home/kdog3682/2023/vueData.js'}
replacecdict          {'ask': {'bookarla': 1, 'mode': 'lines', 'i': 'code', 'arg': 1, 'fn': function('AskQuestion2')}, 'create': {'i': 'GetContiguousSpacesIndexes', 'arg': 1, 'fn': 'CreateFileFromLine'}, 'gb': {'i': 'anyblock', 'fn': function('GrabBlock')}, 'sh': {'i': 'GetCodeIndexes', 'arg': 1, 'fn': 'ShuntToFile'}, 'dgb': {'mode': 'delete', 'i': 'spacing', 'fn': function('GrabBlock')}, 'qu': {'args': 1, 'i': 'block', 'fn': function('QuoteIntoArray')}, 'sn': {'mode': 'delete', 'i': 'notes', 'fn': 'ShuntNotes'}, 'fnr': {'args': 1, 'i': 'code', 'fn': function('RCFnReplace')}, 'cff': {'args': 1, 'i': 'nolinebreak', 'fn': function('CreateFooFunction')}, 'cptf': {'i': 'GetCodeIndexes', 'arg': 1, 'fn': 'CopyToFile'}, 'parse': {'wrapper': 'GS4', 'i': 'GetContiguousSpacesIndexes', 'arg': 1, 'fn': 'ReplaceCParse'}, 'invert': {'wrapper': 'GS4', 'i': 'GetContiguousIndexes', 'fn': 'AddOrRemoveComment'}, 'de': {'i': 'GetCodeIndexes', 'fn': 'CopyUp'}, 'maker': {'args': 1, 'i': 'nolinebreak', 'fn': function('RunMultipleTests')}, 'dda': {'mode': 'gs', 'i': 'all', 'fn': 'DedentLine'}, 'rc': {'i': 'GetScreenIndexes', 'fn': 'RemoveCommentFromLines'}, 'el': {'wrapper': 'GS4', 'i': 'GetContiguousSpacesIndexes', 'arg': 0, 'fn': 'EditLine'}, 'dictify': {'i': 'GetContiguousSpacesIndexes', 'arg': 0, 'fn': 'LinesDictify'}, 'c': {'i': 'GetCodeIndexes', 'fn': 'CopyUp'}, 'd': {'i': 'GetCodeIndexes', 'fn': 'DedentBlock'}, 'tc': {'i': 'trycatchindex', 'fn': 'TryCatcher'}, 'py': {'i': 'GetContiguousSpacesIndexes', 'arg': 1, 'fn': 'VisualAddPyDictItem'}, 'mi': {'i': 'AnyFunctionBlockIndexes', 'fn': 'MoveIn'}, 'g': {'i': 'GetMatchingSpacesIndexes', 'fn': 'GrabIndexes'}, 'v2l': {'i': 'GetContiguousSpacesIndexes', 'arg': 0, 'fn': 'V2Lines'}, 'm': {'bookarla': 1, 'mode': 'd', 'i': 'matching', 'fn': function('ReplaceCMover')}, 'wf': {'i': 'GetContiguousIndexes', 'arg': 1, 'fn': 'WrapFunction'}, 'rcl': {'i': 'GetScreenIndexes', 'fn': 'RemoveConsoleFromLines'}, 'mo': {'i': 'AnyFunctionBlockIndexes', 'fn': 'MoveOutward'}, 'toobj': {'i': 'GetContiguousIndexes', 'fn': 'CreateObject'}, 'v2s': {'i': 'GetPairedFromTopIndexes', 'arg': 1, 'fn': 'V2Snippet'}, 't': {'i': 'GetMatchingSpacesIndexes', 'fn': 'RunBlockTest'}, 'narray': {'i': 'GetContiguousSpacesIndexes', 'arg': 0, 'fn': 'LinesNarray'}, 'sj': {'args': 0, 'i': 'block', 'fn': function('BlockIntoSJString')}, 'rq': {'i': 'CurrentLine', 'arg': 1, 'fn': 'ReplaceQuote'}, '2sl': {'i': 'GetPairedFromTopIndexes', 'fn': 'ToSingleLine'}, 'co': {'wrapper': 'GS4', 'i': 'GetContiguousIndexes', 'fn': 'ConditionalComment'}, 'vat': {'args': 1, 'i': 'GetMatchingSpacesIndexes', 'fn': function('VueAddTransition')}}
iabdict               {'foo': '<!DOCTYPE html><html>^@<head>^@    <script src="vue.js" charset="utf8"></script>^@    <script src="katex.min.js" charset="utf8"></script>^@    <link href="katex.min.css" rel="stylesheet"/>^@</head>^@^@<body>^@    <div id="app"></div>^@</body>^@^@^@<script>^@    ^@^@</script>^@</html>', '89': '()', 'ss': 'const items = split(s, " ")', 'pe': ' += ', 't.': 'this.', 'cle': 'console.log(e)<CR>', 'eq': ' == ', 'pl': ' + ', '90': '()'}
jspy2022              {'not': ['!', 'not']}
iabkey                 
loremdict             {'files': '[''abc.js'', ''abcd.js'']'}
gotopline             #400
did_load_filetypes    #1
changelog_date_end_entry_search  ^\s*$
loaded_vimballPlugin   v37
ldrdict               {'cbo': 'CloseAllBuffersAndOpen', 'saveall': 'SaveAllFilesToDrive', 'sof': 'SourceFile', 'foo': '@PythonConnector apps.py fooba', 'glq': 'GatherLargeQuotes', 'of': function('OpenFile2'), 'oh': function('OpenHtml'), 'oi': 'OpenIndexHtml', 'alc': 'AddLeaderCommand', 'vtp': '@NodeConnector vue-transform.js vuetransform preview', 'ec': function('EditConnector'), 'ssd': 'SetShuntDestination', 'als': 'AddLeaderSingleton', 'ssq': function('SetSearchQuery'), 'ev': 'ExportVim', 'sor': 'SourceVim', 'tempiab': '@PythonConnector vimservice __tempiab', 'uti': 'UnsetTemporaryIab', 'cca': function('CreateCodingArticle'), 'prt': 'Prt', 'a': function('ShuntAway'), 'b': function('AppendBash'), 'c': 'ClrFile', 'd': 'AddDictItem', 'exp': function('ExportFunction'), 'f': 'AddFile', 'svdf': 'SaveAllFilesToDateFolder', 'h': function('Help2'), 'o': 'OpenFile', 'rn': 'RenameFile', 'r': function('ReadItem'), 's': function('Source'), 'v': 'GoVim', 'w': function('Whereami2'), 'bml': 'InvivoBookMarkLine', 'ris': 'RegisterInvivoSnippet', 'za': 'ZAction', 'pc': function('PythonConnector'), 'svf': function('SaveAndTrackNewEdit'), 'fa': function('FooAction'), 'stb': 'SetTempBindings', 'fd': function('FunctionDrafter'), 'fe': '@NodeConnector finderror.js', 'ff': 'FindFunction', 'sti': 'SetTemporaryIab', 'fk': 'FindKeyInDict', 'fn': 'WriteFunctionNotes', 'ifn': 'FastLineEdit', 'fr': 'FfrefFinder', 'fu': function('FindFunctionUp'), 'names': 'ecj', 'var': 'VarHandler', 'cdb': 'CloseDotBuffers', 'ovaf': 'OpenVimActiveFiles', 'eod': 'EndOfDay', 'pip': 'Pip', 'dict': function('AddDictItem'), 'tilda': 'Tildaify', 'anc': 'AddNormalCommand', 'build': 'BuildJS', 'gg': 'GetLocalGithub', 'dep': 'Deprecate', 'gn': function('GoodNight'), 'go': 'Go', 'ant': 'AddNameToDictionary', 'ffc': 'FileFromCurrentFile', 'coc': 'CommentOutConsole', 'coi': 'CommentOutImports', 'saf': 'ShuntAwayFrom', 'sah': 'SetActiveHtmlFile', 'sftv': 'SaveFilesToVim', 'reply': '@PythonConnector redditscript.py reply', 'lsc': 'LoadShortcutsForFile', 'wcf': 'WriteCurrentFiles', 'scrape': '@PythonConnector scrape.py main', 'config': 'ToggleGlobalConfig', 're': 'ReadLibItem', 'rj': function('RunJS'), 'gitu': 'GitUpdate', 'from': '@NodeConnector dependencybuilder.js getMissingDependencies null', 'rs': function('RunSelf'), 'rt': function('Returnify'), 'hg': function('HerokuGit'), 'nerd': '@NodeConnector nerdsolver.js nerdsolver eval', 'saveas': 'Saveas', 'aed': 'AddExpressionDict', 'mark': 'Mark', 'savetoday': 'SaveToday', 'aei': 'InvivoCreateAlias', ',1': function('Source'), 'cfi': 'CopyFileIncrement', 'zoa': 'Zoasd', 'jsr': function('JSLibRef'), 'wpsl': 'WPAddSnippetFromLine', 'tme': 'ToModuleExports', 'sa': 'ShuntAway', 'sd': 'ecp', 'sf': 'SaveCurrentItemTo', 'sh': function('SplitHtml'), 'si': 'SifyAndGoJS', 'apc': 'AddPythonConnectorFileCommand', 'so': function('SmartOpen'), 'cptd': 'CopyFileToOtherDir', 'ss': 'ShuntTestStuff', 'st': function('ShuntTop'), 'sv': 'SaveToInsertionPoint', 'ii': 'InvivoIab', 'app': 'CreateApp', 'fde': function('FindDictEntry'), 'aps': function('AddPySingleton'), 'iq': 'InvivoQuotify', 'sww': 'SeeWhatsWrong', 'ex': 'Extracter', 'rangify': function('Rangify'), 'afs': 'AddFileStartOrEndDate', 'aft': 'AppendFt', 'main': 'NewMain', 'pb2s': 'Pb2snippet', 'scf': function('SaveCurrentFileToFileDict'), 'pbd': 'Pb2d', 'pbi': 'Pb2i', 'lcf': 'LoadCurrentFiles', 'rwu': 'ReplaceWordUnderCursor2', 'lf': 'LogicFind', 'gsc': 'GrabSecondCallAndMoveAbove', 'lg': 'Logging', 'uds': 'UpdateSnippets', 'ga': 'GoToActiveFileAndDictionaryAndAppendEntry', 'map': function('CreateMapFunctionShortcut'), 'cr8': 'CreateFileFromScratchpad', 'todo': 'TodoListForToday', 'tnf': 'ToNoteFile', 'td': function('TemplateDittoHandler'), 'te': 'TestingEnvironment', 'ti': 'ToggleIndent', 'tn': 'ToggleNerdamer', 'to': 'TransportTo', 'tp': 'TestPrintFunction', 'ts': function('ToggleSettings'), 'gfae': 'GetFragmentAndExecute', 'varbu': '@PythonConnector fileservice.py varbu', 'chk': function('CheckIfDictHasKey'), 'mvt': function('Movetop'), 'g': 'GTFGTF', 'adtl': 'AddDateToLine', 'connect': 'ConnectFileToLeaderAndPythonController', 'append': 'LeaderAppend', 'extract': '@PythonConnector extract_stdlib_deps.py main', 'wps': 'WPAddSnippet', 'dsf': 'DeleteSelfFile', 'time': 'GetTimeAndDate', 'ud': '@NodeConnector dependencybuilder.js dependencybuilder null', 'inva': '@PythonConnector apps.py invivoAppend', 'dib': 'DefineInternetBookmark', 'up': function('MoveBlockUp'), 'us': function('UnsetShortcuts'), 'dip': 'DefineInsertionPoint', 'uy': function('UndoYeet'), 'aa': 'AlignAssignments', 'iab': 'CreateIab', 'ad': 'AutoDedent', 'sod': 'StartOfDay', 'ag': 'AskGoogle', 'ai': function('AddImports2'), 'soi': 'SourceIt', 'al': function('AddLets'), 'save': function('SaveForLater'), 'ahs': 'AppendActiveHtmlFile', 'ap': 'AppendPup', 'ar': 'AddRequireItemToTAndU', 'as': 'WordUnderCursorToSnippet', 'sov': 'SourceVim', 'cif': 'ConstructInvivoFunction', 'create': 'CreateFileFromScratchpad', 'isl': 'InsertScriptLink', 'pb2str': 'Pb2str', 'rof': function('ReplaceOriginalFile'), 'pds': 'PrevDatestamp', 'sp': function('SaveProgress'), 'twil': 'Twilio', 'reg': 'RegisterJsImportExport', 'dta': 'DictToArray', 'req': 'GetJsRequire', 'asdf': '@PythonConnector sayhi.py main', '/e': 'GoToDir', 'vf': function('Tovfor'), 'gtl': 'GoToLeader', 'replacepage': 'ecp', 'le': 'LineEdit', 'vt': '@NodeConnector vue-transform.js vuetransform null', 'ask': '@PythonConnector redditscript.py ask', 'rfff': 'ReadFunctionFromFile', 'db': function('DittoBlock'), 'cfio': 'CopyFileIncrementOverride', 'lo': 'LogIt2', 'lv': function('LogVariable'), 'bl': 'Black', 'bm': 'BookmarkManager', 'bu': 'BackupCurrentFiles', 'rpc': 'RegisterPythonConnector', 'rfc': 'ecj', 'rpw': function('RpwHelper'), 'rfn': 'ReplaceFunctionName', 'ear': function('EditAppenderRegexes'), 'eat': 'IabEat', 'wd': 'WriteDictionary', 'sm': 'SetManager', 'wn': 'WriteNotes', 'cftr': function('CopyFileToRoot'), 'rfto': 'ecp', 'mf': 'MarkFile', 'shd': function('ShuntToD'), 'mm': 'ModeMaster', 'fvk': 'FindVimKey', 'ldr': 'AddToLdrDict', 'cd': function('ToggleBufferWithinDirectory'), 'mvup': function('Moveup'), 'flk': 'FindLibKeys', 'cab': 'AddCabmap', 'sgv': 'SetGVariable', 'align': 'AlignAssignments', 'wsc': 'WriteShortcutsForFile', 'gttf': 'GoToTestFile', 'imapqq': '@PythonConnector vimservice __imapqq', 'gmi': 'GetModuleImports', 'dlg': '@PythonConnector download_github_gist.py download_github_gist', 'nf': 'NewFunction', 'ps': 'PrevString', 'efs': 'ExecuteFileString', 'cr8html': '@PythonConnector html_file_from_main_entrypoint.py', 'npm': function('InstallNpm'), 'sro': 'SetRunOver', 'ds': function('DeleteSave'), 'lego': 'ChangeLegos', 'clf': function('CreateLibraryFile'), 'clr': 'ClrFile'}
buffergrouplist       []
lastkey                
drivedir               /mnt/chromeos/GoogleDrive/MyDrive/
pycallableRE           (\w+ \= )?[a-zA-Z\.]+\ze\(
templaterfndict       {'infer': 'GetLastBinding', 'lf': 'GetLastFunction', 'lineNumber': 'GetLineNumber', 'qgp': 'Qgp'}
urldict               {'cwt': 'https://docs.google.com/spreadsheets/d/1Y3KRa7m3Nc8Z9ZGnKDFflGl5mldGBcosY1XIBYMF_Uo/edit#gid=1470853595'}
vimlogic              {'a': 'IsArray($1)', 's': 'IsString($1)', 't': 'Test(''$1'', $2)', 'e': 'Exists($1)', 'f': 'IsFunction($1)', 'w': 'while 1', 'Isi': 'IsNumber($1)', 'Isf': 'IsFile($1)', 'ne': '!Exists($1)', 'n': '!Exists($1)', 'o': 'IsObject($1)'}
file2023dict          {'ps': '/home/kdog3682/2023/Puppeteer.js', 's': '/home/kdog3682/2023/scratchpad.js', 'plj': '/home/kdog3682/2023/package-lock.json', 'u': '/home/kdog3682/2023/utils.js', 'nuo': '/home/kdog3682/CWF/public/node-utils.js', 'sj': '/home/kdog3682/2023/server.js', 'i': '/home/kdog3682/2023/index.html', 'pj': '/home/kdog3682/2023/package.json', 'nu': '/home/kdog3682/2023/node-utils.js', 'server': '/home/kdog3682/2023/server.js'}
root                   /home/kdog3682/
jsondir                /home/kdog3682/JSONS/
loaded_tarPlugin       v32
jscallableRE           [\=\(, ]\zs\w+\ze\(
vimcallableRE          \C[A-Z]\w*\ze\(|'\zs[A-Z]\w+\ze'
websitedict           {'fb': 'facebook.com', 'r': 'reddit.com', 'g': 'google.com'}
importdict            {'urllib': 'import urllib.request', 'shutil': 'import shutil', 'inspect': 'import inspect', 'time': 'import time', 'praw': 'import praw', 'unicodedata': 'import unicodedata', 'FPDF': 'from fpdf import FPDF', 'random': 'import random', 'webbrowser': 'import webbrowser', 'StringIO': 'from io import StringIO', 'datetime': 'import datetime', 'requests': 'import requests', 'pprint': 'from pprint import pprint', 'traceback': 'import traceback', 'socket': 'import socket', 'sys': 'import sys', 'contextmanager': 'from contextlib import contextmanager', 'os': 'import os', 'json': 'import json', 'fbchat': 'import fbchat', 're': 'import regex as re', 'subprocess': 'import subprocess', 'math': 'import math'}
pyactualpydict        {'ifa': 'if isArray($1):^@    $c', 'ifs': 'if isString($1):^@    $c', 'ift': 'if test($2, $1):^@    $c', 'iff': 'if isFunction($1):^@    $c', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self${AddParams($2)}$c):', 'enter': 'def __enter__(self):^@    return self^@def __exit__(self, error, *args):^@    $c', 'ifn': 'if not $0:^@    $c', 'ifo': 'if isObject($1):^@    $c'}
tempfiles             []
server_html_file       build.html
serverfile             /home/kdog3682/2023/serve_html_file.js
lastworddict          {',.': '$0 {^@    $c^@},', 'default': '$0 {^@    $c^@}', 'lxi': '$0 (x, i) => {^@    $c^@})', 'filter': '$0filter((acc, item) => {^@    $c^@})', 'lx': '$0 (x) => {^@    $c^@})', 'redst': '$0reduce((acc, item, i) => {^@    $c^@    return acc^@}, new SimpleStorage())', 'ls': '$0 (s) => {^@    $c^@})', 'button': '$0<button @click="">$c</button>', 'arr': '$0 => {^@    $c^@})', 'div': '$0<div class="">$c</div>', ',': '$0() {^@    $c^@},', 'reds': '$0reduce((acc, ${$1[:-2]}, i) => {^@    $c^@    return acc^@}, '''')', 'p': '$0<p class="">$c</p>', 'mapab': '$0map(([a,b], i) => {^@    $c^@})', 's': 'style {^@    $c^@}', 'redkv': '$0reduce((acc, [k,v], i) => {^@    $c^@    return acc^@}, {})', 'lkv': '$0 (k, v) => {^@    $c^@})', ':': '$0 {^@    $c^@},'}
nodeconnectorfile      /home/kdog3682/CWF/jsconnector.js
notelist              []
filedict              {'t6c': '/home/kdog3682/CWF/public/t6components.js', 'mfj': '/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/manifest.json', 'ecc': '/home/kdog3682/CWD/ec-components.js', 'fpdf': '/home/kdog3682/CWF/jch/fpdf.js', 'emt': '/home/kdog3682/CWF/public/exeter-math.txt', 'ech': '/home/kdog3682/CWD/ec-helpers.js', 'algm': 'algebraic-methods.js', 'scrape': '/home/kdog3682/CWF/public/scrape.js', 'ecu': '/home/kdog3682/CWD/ec-utils.js', 'fs': '/home/kdog3682/CWF/filesystem.py', 'vtc': '/home/kdog3682/CWF/public/voice-to-command.js', '.': 'public2 serv.js', 'od': '/home/kdog3682/CWF/public/outbound-data.js', 'oe': '/home/kdog3682/2023/elementObjects.js', '1': '/home/kdog3682/CWD/html.js', '2': '/home/kdog3682/CWD/html.js', '3': '/home/kdog3682/CWD/html2.js', 'ec': '/home/kdog3682/CWF/public/ec.js', 'ou': '/home/kdog3682/CWF/jch/utils.js', 'notes': '/home/kdog3682/CWF/public/notes.txt', 'ej': '/home/kdog3682/CWF/public/env.js', 'fmath': '/home/kdog3682/.vim/ftplugin/math.vim', 'ftmd': '/home/kdog3682/.vim/ftplugin/markdown.vim', 'H': '/home/kdog3682/CWF/public/r4.html', 'src': '/home/kdog3682/CWF/sandisk/randomColor.js', 'cmc': '/home/kdog3682/CWF/public/codemirror-component.js', 'base': '/home/kdog3682/2023/base.css', 'mlez': '/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs', 'cwt': 'https://docs.google.com/spreadsheets/d/1Y3KRa7m3Nc8Z9ZGnKDFflGl5mldGBcosY1XIBYMF_Uo/edit#gid=1470853595', 'cmg': 'canvas-math-graph.js', 'cmh': '/home/kdog3682/CWF/public/cm.html', 'cmi': 'cmtest/index.html', 'r6h': '/home/kdog3682/CWF/public/r6.html', 'pro': '/home/kdog3682/.profile', 'sir': '/home/kdog3682/SERVER/server.js', 'cmp': '/home/kdog3682/CWF/cmparser.js', 'cmu': '/home/kdog3682/CWF/public/cm-utils.js', 'b': '/home/kdog3682/PYTHON/base.py', 'c': '/home/kdog3682/2023/clip.js', 'd': '/home/kdog3682/CWF/public/demo.html', 'e': 'element-controller.js', 'bashrc': '~/.bashrc', 'h': '/home/kdog3682/CWF/public/h.js', 'i': '/home/kdog3682/2023/index.html', 'm': '/home/kdog3682/TEXTS/m.txt', 'n': '/home/kdog3682/2023/notes.txt', 'o': '/mnt/chromeos/MyFiles/Downloads/myext/options.js', 'p': '/home/kdog3682/PYTHON/pdf.py', 'q': 'q.html', 'r': 'render.js', 's': '/home/kdog3682/2023/TEXTS/scratchpad.txt', 't': '/home/kdog3682/CWF/public/TextEditor.js', 'u': '/home/kdog3682/2023/utils.js', 'v': '/home/kdog3682/.vimrc', 'x': 'class.js.extracts.09-30-2022.log', 'env': '/home/kdog3682/PYTHON/env.py', 'hb': '/home/kdog3682/2023/htmlBuilder.js', 'gram': '/home/kdog3682/CWF/gram.lang', 'rq': '/home/kdog3682/reddit-questions.txt', 'goo': '/home/kdog3682/CWF/public/goo.css', 'ttr': './ttr.py', 'rs': '/home/kdog3682/CWF/request-service.py', 'pa': '/home/kdog3682/2023/parse.js', 'pc': '/home/kdog3682/CWF/pythonconnector.py', 'vue': '/home/kdog3682/CWF/public/vuetify.js', 'rt': '/home/kdog3682/TEXTS/reddit.txt', 'ecm': '/home/kdog3682/CWD/ec-main.js', 'pj': '/home/kdog3682/2023/package.json', 'pm': '/home/kdog3682/CWD/pdfgen-make.js', 'voice': '/home/kdog3682/CWF/public/voice-callbacks.js', 'fb': '/home/kdog3682/CWF/public/file-builder.js', 'pr': '/home/kdog3682/CWF/public/print.js', 'ps': '/home/kdog3682/2023/Puppeteer.js', 'tf4': '/home/kdog3682/CWD/testfile4.js', 'fh': '/home/kdog3682/CWF/file-help.txt', 'fi': 'folder-info.json', 'fl': '/home/kdog3682/LOGS/myFiles.log', 'fm': '/home/kdog3682/.vim/ftplugin/math.vim', 'fn': '/home/kdog3682/CWF/public/fn.json', 'fo': 'foo.json', 'sto': '/home/kdog3682/CWF/storage.py', 'gdoc': 'https://docs.google.com/document/d/1nx2EPubUQl4EQ9bT1coFVtoEyYeGMlhb3fCAjAZ55ew/edit', 'foo': '/home/kdog3682/CWF/public/foo.css', 'str': '/home/kdog3682/CWF/String.py', 'myeo': '/mnt/chromeos/MyFiles/Downloads/myext/options.js', 'boa': 'https://bankofamerica.com', 'cg': '/home/kdog3682/PYTHON/chatgpt.py', 'reportlab': '/mnt/chromeos/MyFiles/Downloads/reportlab-userguide.pdf', 'eod': '/home/kdog3682/CWF/endofday.txt', 'scra': '/home/kdog3682/CWF/scrape.py', 'cj': '/home/kdog3682/TEXTS/code.journal.txt', 'mr': '/home/kdog3682/2023/math-review.txt', 'tc': '/home/kdog3682/CWF/public/text-commands.vim', 'gpt': 'https://chat.openai.com', 'qg': '/home/kdog3682/CWF/public/question-generator.js', 'gist': 'gist.html', 'dec': '/home/kdog3682/CWF/decorators.py', 'pug': '/home/kdog3682/CWF/public/pug.js', 'ga': '/home/kdog3682/PYTHON/ga.py', 'qq': 'qq.html', 'cr': '/home/kdog3682/CWF/public/code-runner.js', 'qs': '/home/kdog3682/questions.js', 'qt': '/home/kdog3682/2023/quiz.txt', 'pconf': '/home/kdog3682/2023/production.config.js', 'gi': '/home/kdog3682/2023/.gitignore', 'ann': '/home/kdog3682/CWF/public2/annyang.js', 'gl': '/home/kdog3682/CWF/GLOBALS.py', 'mathematics': '/home/kdog3682/CWF/public/math', 'cuo': '/home/kdog3682/CWF/public/css-utils.js', 'gr': '/home/kdog3682/TEXTS/grades.txt', 'gs': '/home/kdog3682/CWF/GLOBALS.py', 'wc2': '/home/kdog3682/2023/worksheet-components-2.js', 'krt': '/home/kdog3682/CWF/public/katex.ref.txt', 'java': '/home/kdog3682/2023/javascript.dependencies.json', 'r1': '/home/kdog3682/CWD/raw.js', 'r2': '/home/kdog3682/CWF/public/r2.html', 'r4': '/home/kdog3682/CWF/public/r4.js', 'r5': '/home/kdog3682/CWF/public/r5.html', 'r6': '/home/kdog3682/CWF/public/r6.html', 'Co': '/home/kdog3682/2023/CodeOrganizer.js', 'pup': '/home/kdog3682/CWF/public/puppet.js', 'h2': '/home/kdog3682/CWD/html2.js', 'lorem': '/home/kdog3682/2023/lorem.js', 'rD': 'recursive.drafts.js', 'scss': '/home/kdog3682/CWF/public/s.css', 'tvd': '/home/kdog3682/CWF/public/temp-vue-data.html', 'gui': '/home/kdog3682/CWF/public/gui.txt', 'dj': '/home/kdog3682/CWF/public/d.js', 'piph': '/home/kdog3682/pip.history', 'new': '/home/kdog3682/CWF/public/new.js', 'gith': 'git.html', 'gitj': 'git.js', 'lib': '/home/kdog3682/CWF/libra.py', 'rc': '/home/kdog3682/2023/report-cards.txt', 'rh': '/home/kdog3682/CWF/public/r4.html', 'strf': 'https://strftime.org/', 'rj': 'run.js', 'rm': '/home/kdog3682/2023/raw-math.txt', 'rp': '/home/kdog3682/PYTHON/run.py', 'js2': 'newhelpers.js2', 'he': '/home/kdog3682/CWF/public/html-edit.js', 'hf': '/home/kdog3682/CWD/helperfunctions.js', 'ru': '/home/kdog3682/CWF/reportlab-utils.py', 'hh': '/home/kdog3682/CWD/html-helpers.js', 'nerd': '/home/kdog3682/CWF/public/nerdamer-utils.js', 'hj': '/home/kdog3682/CWD/html3.js', 'hp': '/home/kdog3682/CWF/html-packages.js', 'pub': '/home/kdog3682/CWF/public/public', 'ht': '/home/kdog3682/CWF/public/html-transform.js', 'myebg': '/mnt/chromeos/MyFiles/Downloads/myext/background.js', 'html': '/home/kdog3682/CWF/10-29-2021.html', 's2': '/home/kdog3682/CWF/scratchpad2.js', 'ftext': '/home/kdog3682/.vim/ftplugin/text.vim', 'test': '/mnt/chromeos/MyFiles/Downloads/test.pdf', 'pac': '/home/kdog3682/2023/pac.txt', 'cwf': '/home/kdog3682/CWF.files.json', 'ceem': '/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/background.js', 'jsc': '/home/kdog3682/CWF/public/jsc.js', 'jsa': '/home/kdog3682/CWD/jsa.js', 'rlc': '/home/kdog3682/CWF/reportlab-current.py', 'hmf': 'https://hammymathclass.github.io/flashcards', 'fsr': '/home/kdog3682/CWF/fileservice.py', 'eo': '/home/kdog3682/2023/elementObjects.js', 'out': '/home/kdog3682/CWF/public/output.js', 'bfe': '/home/kdog3682/CWF/public/browser-file-editor.js', 'sa': '/home/kdog3682/CWF/public/socket-action.js', 'rbu': '/home/kdog3682/CWF/rawbackup.js', 'sc': '/home/kdog3682/CWF/public/styles.css', 'sh': '/home/kdog3682/VIM/setup.sh', 'si': '/home/kdog3682/CWF/public/build/index.html', 'sj': '/home/kdog3682/2023/server.js', 'sk': '/home/kdog3682/2023/splitKatex.js', 'sl': '/home/kdog3682/CWF/public/file-loader.js', 'sm': '/home/kdog3682/MATH/story.math', 'so': '/home/kdog3682/CWD/source.js', 'sp': '/home/kdog3682/PYTHON/scratchpad.py', 'sr': '/home/kdog3682/CWF/public/sr.js', 'ss': '/home/kdog3682/2023/scratchpad.js', 'su': '/home/kdog3682/CWF/public/string-utils.js', 'ih': '/home/kdog3682/CWF/public/input-handlers.js', 'ij': '/home/kdog3682/CWF/public/index.js', 'in': '/home/kdog3682/2023/index.html', 'gmail': 'https://gmail.com', 'pubc': '/home/kdog3682/CWF/public/current.js', 'ugit': 'https://github.com/kdog3682/2023/blob/main/utils.js', 'ceem2': '/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/content_script.js', 't2': '/home/kdog3682/CWF/public/test2.html', 't3': '/home/kdog3682/CWF/public/test3.html', 't4': '/home/kdog3682/CWD/testfile4.js', 't5': '/home/kdog3682/CWF/public/t5.js', 't6': '/home/kdog3682/CWF/public/t6.js', 'ij2': '/home/kdog3682/CWF/public/index2.js', 'le': '/home/kdog3682/TEXTS/code.learning.txt', 'tD': '/home/kdog3682/CWF/public/t.drafts.js', 'link': 'https://console.firebase.google.com/u/0/project/hammy-math-class/database/hammy-math-class-default-rtdb/data/~2F', 'cml': '/home/kdog3682/2023/cml.txt', 'lud': '/home/kdog3682/CWF/public/lud.js', 'clip': '/home/kdog3682/CWF/public/clip.js', 'index': '/home/kdog3682/CWF/index.html', 'github': 'https://github.com/kdog3682/2023/blob/main/', 'ft': '/home/kdog3682/2023/file-table.txt', 'gsw': '/home/kdog3682/2023/gold-star-worksheets.txt', 'pdfu': '/home/kdog3682/CWF/pdf_utils.py', 'td': 'https://docs.google.com/document/d/1xUr6FP9NZJ49rGp5ZGsCH6VAfJUZImuVz-6KIgJ_Daw/edit', 'te': '/home/kdog3682/2023/textEdit.js', 'tf': '/home/kdog3682/CWF/public/tempfiles.txt', 'th': '/home/kdog3682/CWF/public/test.html', 'git': '/home/kdog3682/PYTHON/githubscript.py', 'tm': '/home/kdog3682/CWF/public/text-messages.txt', 'vob': '/home/kdog3682/2023/vob.worksheet.js', 'voi': '/home/kdog3682/CWF/public/voice-to-command.js', 'ijh': '/home/kdog3682/JAVASCRIPT/index.html', 'vimrc': '/home/kdog3682/.vimrc', 'home': 'kdog3682 .bash_profile', 'ju': '/home/kdog3682/CWF/public/jsxgraph-utils.js', 'jv': '/home/kdog3682/.vim/ftplugin/javascript.vim', 'cre': '/home/kdog3682/2023/compileRE.js', 'ace': '/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf', 'grades': '/home/kdog3682/TEXTS/grades.txt', 'pmh': '/home/kdog3682/CWF/public/pm-helpers.js', 'chi': '/home/kdog3682/CWF/public/chinese.txt', 'help': '/home/kdog3682/TEXTS/help.txt', 'pmu': '/home/kdog3682/CWF/public/prosemirror-utils.js', 'node': 'node_modules', 'bg': '/mnt/chromeos/MyFiles/Downloads/myext/background.js', 'logs': '/home/kdog3682/logs.txt', 'g': '/home/kdog3682/TEXTS/grades.txt', 'bh': '~/.bash_history', 'rsg': '/home/kdog3682/CWF/render.jsgithub', 'a1': '/home/kdog3682/CWF/jch/app.js', 'a2': '/home/kdog3682/CWF/public/app2.js', 'pdfgen': '/home/kdog3682/CWF/public/playground.js', 'a4': '/home/kdog3682/CWF/public/a4.js', 'tod': '/home/kdog3682/CWF/public/today.js', 'time': 'timesheet', 'dia': '/home/kdog3682/CWF/public/dialogue.js', 'deps': '/home/kdog3682/LOGS/dependencies.log', 'ur': '/home/kdog3682/CWF/public/useful-references.js', 'ut': '/home/kdog3682/CWF/public/utils.js', 'wea': 'https://www.google.com/search?q=weather&rlz=1CACCBQ_enUS943US943&oq=weather&aqs=chrome.0.69i59j35i39j46i131i199i433i465i512j0i131i433i512j0i67i131i433i457j0i402l2j69i61.541j1j7&sourceid=chrome&ie=UTF-8', 'fth': '/home/kdog3682/.vim/ftplugin/html.vim', 'ftj': '/home/kdog3682/.vim/ftplugin/javascript.vim', 'ftm': '/home/kdog3682/.vim/ftplugin/math.vim', 'kq': '/home/kdog3682/CWD/katex-question.js', 'ftp': '/home/kdog3682/.vim/ftplugin/python.vim', 'af': 'afsgsdfgsfsdfasdf.json', 'ujs': '/home/kdog3682/CWF/public/utils.js', 'ftt': '/home/kdog3682/.vim/ftplugin/txt.vim', 'aj': '/home/kdog3682/CWF/public/a.js', 'ftv': '/home/kdog3682/.vim/ftplugin/vim.vim', 'vdata': '/home/kdog3682/2023/vueData.js', 'am': '/home/kdog3682/JAVASCRIPT/app-main.js', 'save': '/home/kdog3682/CWF/public/html-utils.js', 'ap': '/home/kdog3682/CWF/a.py', 'as': 'asdfasdf.json', 'au': '/home/kdog3682/CWF/public/app-utils.js', 'css': '/home/kdog3682/CWF/public/css.css', 'cst': '/home/kdog3682/2023/classwork.school.txt', 'gmailsent': 'https://gmail.com/sent', 'v2docs': 'https://v2.vuejs.org/v2/guide/custom-directive.html#Directive-Hook-Arguments', 'tf2': '/home/kdog3682/CWD/testfile2.js', 'tf3': '/home/kdog3682/CWD/testfile3.js', 'ser': 'server.js', 'pdf': '/home/kdog3682/CWF/pdf.py', 'pdh': '/home/kdog3682/CWF/public/demo.html', 'cold': '/home/kdog3682/CWF/public/clip.js', 'a3': '/home/kdog3682/CWF/public/a3.js', 'Cl': '/home/kdog3682/2023/Classroom.js', 'mcj': '/home/kdog3682/CWF/public/math.config.js', 'red': '/home/kdog3682/PYTHON/redditscript.py', 'mcl': '/home/kdog3682/CWF/public/mycodelog.txt', 'ref': '/home/kdog3682/CWF/public/refs.js', 'citi': 'https://docs.google.com/spreadsheets/d/1Y3KRa7m3Nc8Z9ZGnKDFflGl5mldGBcosY1XIBYMF_Uo/edit#gid=1470853595', 'ljs': '/home/kdog3682/CWF/public/learning.js', 'vb': '/home/kdog3682/CWF/public/vue-base.js', 'vc': '/home/kdog3682/CWF/public/vim-commands', 'vd': '/home/kdog3682/VIM/variables.vim', 'vf': '/home/kdog3682/VIM/functions.vim', 'gac': '/home/kdog3682/2023/googleAppConnector.js', 'mecs': '/mnt/chromeos/MyFiles/Downloads/myext/content_script.js', 'asd': '/home/kdog3682/CWF/public/asd', 'ld': '/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/catblock/loldogs.js', 'vs': '/home/kdog3682/CWD/vuestore.js', 'vt': '/home/kdog3682/CWD/vue-transform.js', 'vu': '/home/kdog3682/2023/vue-utils.js', 'nxn': '/home/kdog3682/CWF/public/na-xie-nian.js', 'li': '/home/kdog3682/CWF/libra.py', 'lj': '/home/kdog3682/2023/log.json', 'this': 'timesheet', 'md1': 'https://docs.google.com/document/d/1-FgzbtB3k29hJ_utfQxhX_ZEc30r81F4Ak-6z_nQW3o/edit?usp=drivesdk', 'ba': '~/.bash_aliases', 'lp': '/home/kdog3682/CWD/langparser.js', 'bc': '/home/kdog3682/2023/base-components.js', 'pya': '/home/kdog3682/PYTHON/apps.py', 'pyc': '/home/kdog3682/CWF/pyconnector.py', 'lu': '/home/kdog3682/CWF/public/lezer-utils.js', 'appscript': 'https://script.google.com/home/projects/1udnFRvx5ObFrf-T36H4-Wnj3bjNDZkfqC1qwj4JUdLfu5sSJXYm4280J/edit', 'classroom': 'https://drive.google.com/drive/folders/1sD9pfkJVa0WBH_FPygLQ-gCaJQRGaO-B', 'bj': '/home/kdog3682/CWF/public/b.js', 'pos': '/home/kdog3682/CWF/public/position-control.js', 'strftime': 'https://strftime.org/', 'spl': '/home/kdog3682/CWF/public/split.txt', 'mathdraft1': 'https://docs.google.com/document/d/1-FgzbtB3k29hJ_utfQxhX_ZEc30r81F4Ak-6z_nQW3o/edit?usp=drivesdk', 'sfe': '/home/kdog3682/SERVER/server-frontend.js', 'bu': '/home/kdog3682/2023/browser-utils.js', 'pys': '/home/kdog3682/CWF/pystuff.py', 'vda': '/home/kdog3682/CWF/public/vue-data.js', 'r3c': '/home/kdog3682/CWF/public/r3c.js', 'w2': '/home/kdog3682/2023/ws2.vob.js', 'r3h': '/home/kdog3682/CWF/public/r3.html', 'anime': '/home/kdog3682/CWF/public/anime.js', 'cjs': '/home/kdog3682/CWF/public/comments.js', 'temp': '/home/kdog3682/2023/CodeOrganizer.js', 'm2': '/home/kdog3682/2023/math.txt', 'print': '/home/kdog3682/CWF/public/print.js', 'bcs': '/home/kdog3682/CWF/public/base.css', 'clm': '/home/kdog3682/LOGS/CHANGELOG.md', 'comp': '/home/kdog3682/2023/compiled.js', 'c2': '/home/kdog3682/CWF/public/clip2.js', 'c3': '/home/kdog3682/CWF/public/class3.js', 'c4': '/home/kdog3682/CWF/public/class4.js', 'zip': '/home/kdog3682/PYTHON/zipscript.py', 'mds': '/home/kdog3682/CWF/public/math-doc-string.txt', 'teachingdiary': 'https://docs.google.com/document/d/1xUr6FP9NZJ49rGp5ZGsCH6VAfJUZImuVz-6KIgJ_Daw/edit', 'hc': '/home/kdog3682/2023/hammyComponents.js', 'jcl': '/home/kdog3682/JAVASCRIPT/class.js', 'wc': '/home/kdog3682/2023/worksheet-components.js', 'bjs': '/home/kdog3682/2023/b.js', 'ma': '/home/kdog3682/TEXTS/math.archive.txt', 'mb': 'mathbook.raw.txt', 'mc': '/home/kdog3682/CWF/public/mc.js', 'md': '/home/kdog3682/CWF/math.dict', 'me': '/home/kdog3682/2023/me.txt', 'a': '/home/kdog3682/CWF/public/mc.js', 'mg': '/home/kdog3682/2023/mathgen.js', 'mh': '/home/kdog3682/CWD/math-helpers.js', 'mj': '/home/kdog3682/TEXTS/me.journal.txt', 'tl': '/home/kdog3682/LOGS/today.log', 'ws2': '/home/kdog3682/2023/ws2.vob.js', 'mp': '/home/kdog3682/CWF/public/math-prose.js', 'cc': '/home/kdog3682/CWD/current-components.js', 'cd': '/home/kdog3682/CWF/public/clip-data.js', 'ms': '/home/kdog3682/MATH/story.math', 'mt': '/home/kdog3682/CWF/public/math-transform.js', 'mu': '/home/kdog3682/2023/ma.js', 'ch': '/home/kdog3682/2023/clip.html', 'pd': '/home/kdog3682/CWF/public/demo.js', 'cl': '/home/kdog3682/CWF/public/class.js', 'cm': '/home/kdog3682/CWF/public/cm.js', 'cn': '/home/kdog3682/2023/code-notes.txt', 'co': '/home/kdog3682/2023/codeOrganizer.js', 'cp': '/home/kdog3682/CWD/css-parser.js', 'afs': 'afsgdfghdfghsdfgsfsdfasdf.json', 'cs': '/mnt/chromeos/MyFiles/Downloads/10_28_2022 (4).css', 'ct': '/home/kdog3682/CWF/public/component-test.js', 'cu': '/home/kdog3682/2023/css-utils.js', 'cur': '/home/kdog3682/MATH/current.math', 'myf': '/home/kdog3682/LOGS/myFiles.log', 'geo': '/home/kdog3682/CWF/public/geometry.js', 'hmc': 'https://hammymath.github.io/', 'r4h': '/home/kdog3682/CWF/public/r4.html', 'fhtml': '/home/kdog3682/.vim/ftplugin/html.vim', 'r4l': '/home/kdog3682/CWF/public/r4leftovers.js', 'acejson': '/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf.json', 'myr': '/home/kdog3682/.reddit.json', 'prep': '/home/kdog3682/CWF/public/prepare-reddit.js', 'wsa': 'https://script.google.com/home/projects/1udnFRvx5ObFrf-T36H4-Wnj3bjNDZkfqC1qwj4JUdLfu5sSJXYm4280J/edit', 'resume': 'https://docs.google.com/document/d/11PzEB137TPCDX4xr8Hcy3ysJ4FPRwm24jRMhIb7Lb6k/edit', 'd2': '/home/kdog3682/CWF/public/demo2.html', 'hlez': '/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs', 'ftc': '/home/kdog3682/.vim/ftplugin/css.vim', 'gmc': '/home/kdog3682/2023/generateMultipleChoice.js', 'bkl': '/home/kdog3682/CWF/bkl.py', 'jdj': '/home/kdog3682/2023/javascript.dependencies.json', 'pugt': '/home/kdog3682/CWF/public/pug.txt', 'chl': '/home/kdog3682/2023/changelog.md', 'log': '/home/kdog3682/2023/log.json', 'vimd': '/home/kdog3682/VIM/variables.vim', 'nc': '/home/kdog3682/CWF/public/nc.js', 'nh': '/home/kdog3682/CWD/nodehelpers.js', 'pcj': '/home/kdog3682/2023/production.config.js', 'no': '/home/kdog3682/CWF/notes.txt', 'db': '/home/kdog3682/CWD/dependencybuilder.js', 'npj': '/home/kdog3682/CWF/generator/node_modules/rollup-plugin-typescript2/node_modules/tslib/package.json', 'de': '/mnt/chromeos/MyFiles/Downloads/demo.js', 'nu': '/home/kdog3682/2023/node-utils.js', 'dh': '/home/kdog3682/CWF/public/demo.html', 'ec2': '/home/kdog3682/CWF/public/element-controller.js', 'pu': '/home/kdog3682/CWF/public/prose-utils.js', 'vim': '/home/kdog3682/CWF/vim.py', 'dt': '/home/kdog3682/2023/dialogue.txt', 'lego': '/home/kdog3682/CWF/public/lego.js', 'cle': 'https://newyork.craigslist.org/search/edu#search=1~list~0~0', 'iab': '/home/kdog3682/VIM/functions.vim', 'norm': '/home/kdog3682/CWF/public/normalize.css', 'vv': '/home/kdog3682/VIM/variables.vim'}
logfile                /home/kdog3682/LOGS/myFiles.log
backupleaderdict      {'r': function('Read'), 's': function('SmartMovementAppend'), 'v': function('SetVariable'), 'g': function('GotoSavedBookMark')}
importre               <(sys|praw|default_timer|difflib|urllib|itertools|html|requests|subprocess|shutil|socket|inspect|datetime|time|json|sys|re|os)\ze\.|<(black|FPDF|fbchat|pprint)\ze\(
mode_mappings         []
jsanywherefile         index.js2
qqdict                {'GLOBALS.py': {'c': 'GLOBALS.commentlog', 'ce': 'GLOBALS.CODE_EXTENSIONS', 'whf': 'GLOBALS.WEBSITE_HELPER_FILES', 'm': 'GLOBALS.messagelib'}}
shuntfile              comments.js
activeHtmlFile         r4.html
B                       {^@    $c^@}
zipPlugin_ext          *.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip
p5dict                {'vue': [['^        "?\w+$', '$1() {^@    $c^@},']]}
changelog_dateformat   %Y-%m-%d
txtdir                 /home/kdog3682/2023/TEXTS/
loaded_logiPat         v4
tempbindingref        {'q': 'WriteCodeReviewNotes', '2': 'ExecutePythonRegex', 'py': {'asdf': 'adf'}}
logittemplatedict     {'tl': 'throwError($0)', 'lat': 'console.log(nerdSolver($0)); throw ""', 'txl': 'console.log({$0}); throw ""', 'la': 'const answer = nerdSolver($0)'}
aobj                  {'a': 1, 'b': 2}
LogitKeys             ['tl', 'lat', 'txl', 'la']
quoteRE                ['"]\zs.{-}\ze['"]
libcreationdate        12-07-2021
homedir                /home/kdog3682/
dir2023                /home/kdog3682/2023/
pylogic               {'new': '$not test(''$1$'', $2)', 'isd': 'isdir($1)', 'isf': 'isfile($1)', 'al2': 'arguments.length == 2', 'cwxdn': 'not $1', 'isi': 'isInteger($1)', 'eq': '$1 == $2', 'l1': 'if len($1) == 1', 'l2': 'if len($1) == 2', 'l3': 'if len($1) == 3', 'lt': 'len($1) < $2', 'a0e': 'args[0] == $1', 'num': 'isNumber($1)', 'csdfwdxxn': 'not $1', 'a2e': 'args[2] == $1', 'pi': 'parseInt($1)', 'al1': 'arguments.length == 1', 'a': 'isArray($1)', 'hvx': 'hasVariableX($1)', 'isvw': 'isVeryWordy($1)', 'f': 'isFunction($1)', 'a1e': 'args[1] == $1', 'issl': 'isSingleLine($1)', 'n': 'not $1', 'o': 'isObject($1)', 'al3': 'arguments.length == 3', 's': 'isString($1)', 't': 'test(''$1'', $2)', 'cwdxxn': 'not $1', 'nsw': '$not test(''^$1'', $2)', 'nisf': 'not isfile($1)', 'cn': '$1.constructor.name == $2', 'ewn': 'endsWithNumber($1)'}
filelogfile            /home/kdog3682/LOGS/today.log
ldrdict2              {'a': function('ShuntAway'), 'fvb': function('FindVimBinding'), 'k': function('FindLibKeys'), 'flk': function('FindLibKeys')}
filebookmarkdict      {'tm': 'temp-bookmarks.files.txt', 'bm': 'bookmarks.files.txt'}
mode                   l
matchparen_insert_timeout #60
mapping                
controller            {'bold': 0, 'newline': 0, 'italic': 0}
server_html_commands  ['a', 'numbers', 'clipData', 'loremVobJSON']
currentpos            #0
registratar_templates {'js': 'let g:pydict["$1"] = "$2"', 'html': 'let g:wpsnippets["html"]["$1"] = "$2"', 'iabfn': 'inoreab $1 $2()<LEFT><C-R>=Eatchar(''\s'')<CR>', 'eat': 'inoreab $1 $2<C-R>=Eatchar(''\s'')<CR>', 'python': 'env.basepyref["$1"] = "$2"', 'vim': 'let g:wpsnippets["vim"]["$1"] = "$2"', 'c': 'cnoreab $1 $2 <C-R>=Eatchar(''\s'')<CR>', 'exec': 'let g:execRef["$1"] = "call $2()"', 'iab': 'inoreab $1 $2', 'py': 'let g:pythonsnippets["$1"] = "$2"', 'n': 'nnoremap $1 :call $2()<CR>', 'ldr': 'let g:ldrdict["$1"] = "$2"', 'i': 'inoremap $1 <esc>:call $2()<CR>', 'css': 'let g:wpsnippets["css"]["$1"] = "$2"', 'imap': 'inoremap $1 $2 '}
snippetCompletionStartDict {'trim': 's = s.strip()', 'rf': 'return False'}
jslogicdict           {'if': 'if', 'ef': 'else if'}
abcRE                  asdfasdf
server_html_super_commands ['string-screenshot', 't1-screenshot', 't1-print', 't2-print', 'final-print']
vimrcfile              /home/kdog3682/.vimrc
javascriptdir          /home/kdog3682/JAVASCRIPT/
node1dict             {'chatgpt.txt': 'Python2("runChatgpt")', 'scratchpad.txt': 'BasePY(":google_chinese cf")', 'text-messages.txt': 'BasePY(":sendTextMessages cf")', 'app2.js': 'BasePY("googleAppScript")', 'chinese.txt': 'BasePY(":google_chinese cf")', 'appScript.js': 'BasePY("googleAppScript")', 'app-main.js': 'BasePY("googleAppScript")'}
runover                AppendPup
importfile             imports.template
movefunctiondefaultdestination  test.py
vimdir                 /home/kdog3682/VIM/
currentiabdict        {}
pureExecRef           {'b': 'bd', 'e': 'Explore /home/kdog3682/2023'}
linebreak              ---------------------------------------------
zoop                   hi
logdir                 /home/kdog3682/LOGS/
sshfile                /home/kdog3682/.ssh/known_hosts
replacement            
blockEndRE             ^(endfunction|\\?[\}\]]|def|class|\w+ +\=)
lastvimcmd             call VisualAction("f")
vimrc                  ~/.vimrc
alist                 [0, 1, 2, 3, 4, 5]
pydir                  /home/kdog3682/PYTHON/
arrmethodwords        ['red']
mappings              {'!': [], 's': [':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>', ':<C-U>call ReplaceContiguousOrScreen('''')<Left><Left>'], 'v': [], 'x': [], 'i': [], 'l': [], 'n': [':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O', ':call VNext()<CR><Down>O'], 'o': []}
count                 #0
normaldict            {}
searchquery            \/\/ \?\w
pupname                cm
lastCommand            w
lastfile               /home/kdog3682/TEXTS/code.learning.txt
langref               {'vim': 'vim', 'txt': 'txt', '.vimrc': 'vim', 'vue': 'js', 'mhtml': 'js', 'json': 'js', 'py': 'py', 'html': 'js', 'sh': 'bash', 'js2': 'js', '.bash_aliases': 'bash', 'bashrc': 'bash', '.bashrc': 'bash'}
randomlist            []
qgnormalref           {'': 'GoLastWord', 'bm': 'GoLastBookmark', 'ls': 'GoLastString'}
loaded_matchparen     #1
dayswork              ['nerd.js', '/home/kdog3682/.vimrc', 'libra.py', '/home/kdog3682/CWF/filesystem.py', 'organize_notes.py', '/home/kdog3682/CWF/line_edit.py', 'vim_commands.log', 'progress.txt']
bookmarkdict          {'edit.js': {'p4': '^function PySnippet4', 'asdfp4': '^function PySnippet4', 'pasdfsdf4': '^function PySnippet4'}, '.vimrc': {'p': '^function PySnippet4'}, 'fpdf.js': {'p4': '^function PySnippet4', 'asdfp4': '^function PySnippet4', 'pasdfsdf4': '^function PySnippet4'}, 'index.js': {'p4': '^function PySnippet4', 'asdfp4': '^function PySnippet4', 'qc': 'ref\="currentAnswer"', 'pasdfsdf4': '^function PySnippet4'}, 'master.css': {'p4': '^function PySnippet4', 'asdfp4': '^function PySnippet4', 'pasdfsdf4': '^function PySnippet4'}}
fnRE                   (function|def|class) \zs\w+
mastersnippets        {'vim': {'gfw': 'GetFirstWord()', 'zop': 'function', 'cw': 'CurrentWord()'}, 'js': {'lec': 'le.currentComponent'}, 'html': {}, 'py': {'foo': 'abc^@asdf', 'pylibs': 'from test import *^@from pprint import pprint as p^@import time^@import sys^@import String^@import webbrowser^@import black^@from filesystem import *^@', 'asd': 'dirinfo'}, 'css': {}}
vueregexdict          {'p': 'props:', 'r': 'render', 'c': 'computed:', 'd': 'data', 'f': 'methods:', 'w': 'watch:', 't': 'template:', 'm': 'mounted'}
bookmarkdict2         {'GoFile': '/home/kdog3682/.vimrc', 'q1': '/home/kdog3682/CWD/testfile4.js', 'createComponents': '/home/kdog3682/CWF/public/depot.js', 'CreateFunctionBlock': '/home/kdog3682/.vimrc', 'HtmlEdit': '/home/kdog3682/CWD/vue-transform.js', 'ExpressionMaster': '/home/kdog3682/.vimrc', 'htmlparser2runner': '/home/kdog3682/CWD/vue-transform.js', 'pairs': '/home/kdog3682/CWD/nodehelpers.js', 'vuetransform': '/home/kdog3682/CWD/vue-transform.js', 'schemaMatch': '/home/kdog3682/CWF/public/utils.js', 'BookmarkManager2': '/home/kdog3682/.vimrc', 'mathstoryparser': '/home/kdog3682/CWD/nodehelpers.js', 'leToComponent2': '/home/kdog3682/CWD/vue-transform.js', 'evaluateJavascriptWithArgsFromAnywhere': '/home/kdog3682/CWF/public/TextEditor.js', 'run': '/home/kdog3682/CWD/vue-transform.js', 'LEVELS': '/home/kdog3682/CWD/testfile4.js', 'CodeLibrary': '/home/kdog3682/CWD/jsa.js'}
toclist               [{'name': 'append to js env file', 'f': 'AppendJSEnv'}]
exprdict              {'vim': {'tl': {'cursor': -1, 'expr': 'print($c)^@raise Exception('''')'}, 'pr': {'expr': 'echo $c'}, 'c': {'cursor': 2, 'expr': 'const'}, 'ovals': {'cursor': -1, 'expr': 'Object.values($c)'}, 'sj': {'cursor': 2, 'expr': 's = `^@$c^@`'}, 'okeys': {'cursor': -1, 'expr': 'Object.keys($c)'}}, 'js': {'tl': {'cursor': 2, 'expr': 'console.log($c); throw '''';'}, 'c': {'anywhere': 1, 'expr': 'const'}, 'ovals': {'cursor': -1, 'expr': 'Object.values($c)'}, 'cur': {'anywhere': 'inoremap', 'expr': 'current'}, 'tc': {'anywhere': 1, 'expr': 'this.c'}, 'sj': {'cursor': 2, 'expr': 's = `^@$c^@`'}, 'okeys': {'cursor': -1, 'expr': 'Object.keys($c)'}, 'ti': {'anywhere': 1, 'expr': 'this.item'}, 'co': {'expr': 'const'}}, 'html': {}, 'py': {'tl': {'cursor': -1, 'expr': 'print($c)^@raise Exception('''')'}, 'pr': {'expr': 'pprint($c)'}, 'ovals': {'cursor': -1, 'expr': 'values = list($c.values())'}, 'sj': {'cursor': 2, 'expr': 's = """^M^M"""<80>ku'}, 'okeys': {'cursor': -1, 'expr': 'keys = list($c.keys())'}}, 'global': {'pl': {'expr': ' + '}}}
i                     #0
jsimports              const module.exports = {StandardObject, roygbiv, numberWords, Cache, Indexed, assert, partial, log, getLongest, aggregateRegexFromHashmap, dreplace, ncg, isIterable, isArray, isObject, type, search, isString, matchgetter, ncgRunner, prepareIterable, notNone, isNumber, test, isPrimitive, rescape, templater, hasCaptureGroup, replace, getIndent, evalClock, atFactory, filtered, fixSpaceLength, getIndentAndLine, argsplit, toDashCase, toSnakeCase, findKey, range, partitioned, appFinal, findElement, findKeys, finderror, flatfindall, defineGetters, defineGetter, kcDefine, finder, findchild, isDefined, findAbbreviation, findall, findParentWhoHasNoParentStartingFromChild, toStringObject, capitalize, singlequote, delta, toVariable, quotify, tail, removeComments, ftest, consoleThrow, mapConditional, dedentPre, getFunctionName, merge, getLast, tryval, abbreviate, counted, shuffle, isBoolean, Clock, isFirst, coerceError, toArgument, randomPick, isWord, isPromise, getExtension, sorted, isDoubleIterable, isNestedArray, char2n, datestamp, getMDY, newlineIndent, indent, toSpaces, iterate, toArray, sortStorage, Storage, ObjectWatcher, VueStorage, reduce, exists, remove, modularIncrement, mreplace, smallify, sleep, parens, unique, stringify, getStorage, parseJSON, isJsonParsable, splitonce, isRegExp, pop, isFunction, fill, counter, joined, assign, findall, doublequote, isDefined, toString, split, matchall, AnimationState, GlobalState, toCamelCase, modularIncrementFn, randomColor, flat, sum, getOptions, hasNumber, len, isTrue, sortEach, stringCall, pipe, isClassObject, logged, forEach, toggle, isNode, indexgetter, insert, getSpaces, dedent, identity, trimmed, throwError, inferlang, aggregate, paired, toDictionary, isJson, typed, splitmapfilter, isClass, getFirstParameter, itersearch, getParameters, backspaced, isElement, getFirst, hasComma, toLiteralArray, UniqueGenerator, UniqueStorage, toUpperCase, wordToNumber, numbersort, hasLetter, subtractALittle, endsWithNumber, depluralize, hasWord, getWords, shared, copy, isInteger, isPositive, hasLookAround, toInteger, isCapitalized, zeroPad, changeDate, isYesterday, isToday, kfnormalizeTiming, LineEdit, assignAliases, postgoogle, fixClassName, boxed, visible, atFirst, original, display, splitThePage, looksLikeProse, sortByDependencies, tryCatchString, jsa, jsconnector, loadcss, aggregateCSS, cssValueParser, getCssItems, cssParser, reduceCss, cssEntry, addCssPeriod, toCssClassName, cssBracket, cssCalc, cssAnimation, cssColorMatch, cssPcal, cssBoxShadow, cssBorder, cssColor, cssUnit, cshpos, csho, cshcolor, cssShorthand, cshkf, cshclasses, createConfigCss, cshtimeline, cabmap, cssattrmap, cssunitmap, tailwind, vmap, range, coinflip, hasMultipleVariables, rng, getNumbers, isOdd, allEqual, hasEquals, hasVariableX, hasNaN, isNiceAnswer, hasTerminatingDecimal, getprimefactors, getdigits, notPrime, power10, getDecimalLength, getOperators, hasMathOperator, isNegativeAnswer, isLatexOperator, isLatexFraction, isLatexExponent, simplifyRatio, hasDecimal, isSquare, isCube, fractionToPercent, getVariables, hasVariable, isTerminating, lcm, countDecimalPlaces, divmod, toRatio, isPercentage, isRepeatingDecimal, getFactors, gcd, kfcalcDuration, toNerdamerFraction, toLatexFraction, toLatexFromVeryRaw, toMixedMath, toMath, toNerdamerRunner, toMath2, toNerdamer, mathsolver, divify, toOpeningTag, hasHtmlSuffix, toClosingTag, isStandardHtml, htmltrim, divifyn, htmlElements, modalitemcparser, main, toSingularForArg} = require('./nodehelpers.js')
foodict               {'q': 'questions.txt', 'r': 'r.py', 't': ['today.py', 'vv'], 'n': '/home/kdog3682/CWF/notes.txt'}
pythondir              /home/kdog3682/PYTHON/
visualactiondict      {'le': {'kwargs': {'to': '/home/kdog3682/TEXTS/code.learning.txt'}, 'i': 'nolinebreak', 'fn': 'VisualTransferBlock'}, 'vt': {'i': 'nolinebreak', 'arg': 'htmlBuilder', 'fn': 'VisualTransferToJS'}, 'sh': {'i': 'codeblock', 'fn': 'VisualShunt'}, 'uc': {'i': 'contiguous', 'fn': 'UncommentBlock'}, 'chl': {'i': 'belowCursor', 'arg': '/home/kdog3682/2023/changelog.md', 'fn': 'VisualTransfer'}, 'gd': {'i': 'belowCursor', 'arg': '', 'delete': 1, 'fn': 'VisualTransferToGoogleDoc'}, 'b': {'i': 'nolinebreak', 'fn': 'VisualBlockTemplater'}, 'c': {'i': 'codeblock', 'fn': 'VisualCopyBlock'}, 'd': {'i': 'GetMethodIndexes', 'fn': 'DeleteBlock'}, 'arr': {'i': 'nospaces-nobraces', 'fn': 'VisualMakeArray3'}, 'vc': {'i': 'line', 'arg': 'getStylePayload', 'fn': 'VisualTransferToJS'}, 'dt': {'i': 'codeblock', 'fn': 'VisualShunt'}, 'obj': {'i': 'contiguous', 'appendAfter': 1, 'fn': 'VisualMakeObject'}, 'ret': {'i': 'contiguous', 'arg': 'trycatch', 'fn': 'VisualAppend'}, 'rw': {'replace': 1, 'i': 'nospaces-nobraces', 'fn': 'ReplaceWordUnderBlock'}, 's': {'i': 'contiguous', 'fn': 'VisualTemplate'}, 'letter': {'down': 'sincerely', 'grab': 1, 'up': 'hi \w+', 'delete': 1, 'fn': 'VisualShunt'}, 'try': {'i': 'contiguous', 'arg': 'trycatch', 'fn': 'VisualWrap'}, 've': {'i': 'line', 'arg': 'runJavascript', 'fn': 'VisualTransferToJS'}, 'bro': {'i': 'smartblock', 'arg': 'copyToBrowser', 'fn': 'VisualTransferToPython'}}
jsbe                    {^@    $c^@}
shuntdestinationfile   /home/kdog3682/CWF/public/user
questionlist          []
currentMovementTarget  kc
loaded_netrwPlugin     v170
most_recent_directory  /mnt/chromeos/MyFiles/Downloads/
jspydict              {'vim': {'else': 'else', 'comment': '"', 'classparam': 'self', 'ift': ['if ', ''], 'try': ['try', '    ', 'catch', '    ', 'endtry'], 'commentPrefix': '"', 'classp1': '', 'p2': '', 'stry': 'try', 'eft': ['elseif ', ''], 'if': ['if ', ''], 'prefix': 'let ', 'const': 'let ', 'testfunc': 'Test', 'let': 'let ', 'consoleEnd': '', 'capitalize': 1, 'a': 'IsArray', 'function': 'function', 'logicsuffix': '', 'callableRE': '\C[A-Z]\w*\ze\(|''\zs[A-Z]\w+\ze''', 'lbr': '"""""""""""""""""""""""""""""""""""""""""""""""""""""""', 'scatch': ['catch', '        ', 'endtry'], 'consoleX': 'console', 'p1': 'function', 'consoleStart': 'echom ', 'n': 'IsNumber', 'o': 'IsObject', 'variablePrefix': 'let ', 's': 'IsString', 'consolefn': function('<lambda>917'), 'commentSuffix': '', 'ef': ['elseif ', ''], 'console': 'ec ', 'suffix': 'endfunction', 'log': 'echo  ', 'slash': '\'}, 'js': {'consoleX': 'console', 'prettier': 'prettier --write ', 'runtime': 'node', 'libfile': 'javascript.lib', 'ef': ['else if (', ') {'], 'else': 'else {', 'comment': '//', 'a': 'isArray', 'commentPrefix': '//', 'sdelimiter': '`', 'eft': ['else if (', ') {'], 'const': 'const ', 'clbr': 'console.log("*******************************************")', 'p1': 'function', 'p2': ' {', 'callableRE': '[\=\(, ]\zs\w+\ze\(', 'n': 'isNumber', 'o': 'isObject', 's': 'isString', 'suffix': '}', 'consoleThrow': 'consoleThrow(', 'console': 'console.log(', 'classMethodRE': '^    ', 'classparam': '', 'consoleEnd': ')', 'function': 'function', 'lbr': '/****************************************************/', 'capitalize': 0, 'consoleStart': 'console.log(', 'ift': ['if (', ') {'], 'consolefn': function('<lambda>916'), 'log': 'console.log()', 'classp1': '', 'try': ['try {', '    ', '}', 'catch(e) {', '    ', '}'], 'logicsuffix': '}', 'prefix': 'var ', 'if': ['if (', ') {'], 'stry': 'try {', 'testfunc': 'test', 'let': 'let', 'variablePrefix': 'const ', 'scatch': ['}', 'catch(e) {', '    ', '}'], 'expand': 'javascript', 'commentSuffix': ''}, 'py': {'else': 'else:', 'comment': '#', 'classparam': 'self', 'ift': ['if ', ':'], 'consoleX': 'console', 'commentPrefix': '#', 'classp1': 'def ', 'p2': ':', 'stry': 'try:', 'eft': ['elif ', ':'], 'capitalize': 0, 'classMethodRE': '^    def ', 'if': ['if ', ':'], 'sdelimiter': '''''''', 'testfunc': 'test', 'consoleEnd': ')', 'prettier': 'black ', 'prefix': '', 'a': 'isArray', 'function': 'def', 'logicsuffix': '', 'runtime': 'python3', 'callableRE': '(\w+ \= )?[a-zA-Z\.]+\ze\(', 'lbr': '#######################################################', 'scatch': ['except Exception as e:', '        '], 'try': ['try:', '    ', 'except Exception as e:', '    '], 'p1': 'def', 'consoleStart': 'print(', 'n': 'isNumber', 'o': 'isObject', 'variablePrefix': '', 's': 'isString', 'expand': 'python', 'consolefn': function('<lambda>918'), 'commentSuffix': '', 'run': 'python3', 'libfile': 'combine.py.lib', 'suffix': '', 'log': 'print()', 'ef': ['elif ', ':']}, 'html': {'commentSuffix': ' -->', 'commentPrefix': '<!--'}, 'bash': {'p1': '', 'function': '', 'comment': '#', 'p2': ' {', 'log': 'echo  ', 'suffix': ' }'}, 'css': {'commentSuffix': ' */', 'lbr': '/*********************************************************/', 'commentPrefix': '/*'}}
dir                    /home/kdog3682/CWF/
dotu                   .{-}
ab                     (([a, b]) => {^@    $c^@})
mathdir                /home/kdog3682/MATH/
movementdict          {'uj': 'UpdateJson', 'kc': 'KeyController'}
lastshuntdestination   test.py
ak                    ['screenshot', 'html', 'print', 'clip', 'windowString']
targetline            #0
invivojs              [['(append|write|read|split|co) (.+)', 'Ijsawr'], ['(\w+[a-z0-9 ,]{-})( \= .+)', 'Ijsarrobj']]
vimdict               {'pcfadd': 'def __add__(self, $2):^@    ', 'line': 'let line = CurrentLine()', 'pcfcall': 'def __call__(self, $2):^@    ', 'head': 'let head = Head()', 'block': 'let block = GetCodeBlock()', 'upline': 'let upline = UpLine()', 'name': 'let name = GetBindingName()', 'bm': '${Timestamp($1)}', 'pcfiter': 'def __iter__(self, $2):^@    ', 'lang': 'let lang = GetLang()', 'js': 'AddPydictItem', 'last': 'let last = GetLastBinding()', 'pcffn': 'def $1($2):^@    ', 'er': 'let g:execRef["${Abrev($1)}"] = "$1"', 'bc': 'BetterConsole', 'dep': 'throw ''deprecation''', 'link': 'let g:filedict["link"] = "$1"', 're': 'RegexBuilder', 'index': 'let index = GetFunctionIndex()', 'e': 'let e = GetExtension()', 'f': 'let g:filedict[''temp''] = ''$1''', 'i': 'SnippetActionJsImport', 'emptyFunction': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'word': 'let word = GetCurrentWord()', 'context': 'let context = GetContext2()', 'hk': 'if has_key($1, ''$2'')^@    $c^@endif', 'w': 'while 1^@    $c^@endwhile', 'ht': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'cur': 'let cursor = GetCursor()', 'file': 'let file = CurrentFile()', 'spaces': 'let spaces = CurrentSpaces()', 'lines': 'let lines = NameMaker()', 'fd': 'let g:filedict["$1"] = "$2"', 'for': 'for item in $1^@    $c^@endfor', 'date': 'let date = DateStamp()', 'ar': 'MakeStringArray2023', 'vt': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'ax': 'b g asd', 'pcfclass': 'def $1(self, $2):^@    ', 'pr': 'props: {^@    $1: {default: ''''},$c^@}', 'if': 'if $1^@    $c^@endif', 'no': 'nnoremap $1 :call $2()<CR>', 'dict': 'MakeStringDict2023', 'de': 'DictEntry2', 'cursor': 'let cursor = GetCursor()', 'tpl': 'UnloadSavedWordsOnTemplate', 'asd': '/* ${Tail(g:filedict[$0])} */'}
xxxx                  {'asdf': 'xxxx'}
zoopbarwords          ['update', 'get', 'set']
matchparen_timeout    #300
vuec                   const $1 = {^@    props: [],^@    template: `^@        <div>^@        $c^@        </div>^@    `,^@    data() {^@        return {^@            ^@        }^@    },^@}
activehtmlfile         test.html
fnabrevdict           {'a': 'array', 's': 'string', 'num': 'number', 'node': 'node', 'n': 'null', 'o': 'object'}
defaultlib             javascript.lib
libraries             {}
logicdict             {'vim': {'else': 'else {', 'vt': {'template': 'template: `^@    ^@`,', 'suffix': ''}, 'forkjiii': '', 'forkijiii': '', 'ift': 'if (test($0)) {', 'try': 'try {^@}^@catch(e) {', 'fori': 'for (let i = 0; i < $0; i++) {', 'efn': 'else if (!$0) {', 'fork': 'for (let key of Object.keys($0) {', 'border': 'border: 0.5px solid red;', 'efs': 'else if (isString($0)) {', 'ifn': 'if (!$0) {', 'forkv': 'for (let [k, v] of Object.entries($0)) {', 'len': 'print(''length of $0:'', len($0))', 'props': {'snippet': 'props: $0,', 'noappend': 1, 'functions': 'ArrayExpand'}, 'forv': 'for (let value of Object.values($0) {', 'if': 'if ($0) {', 'dict': 'const dict = {', 'eft': 'else if (test($0)) {', 'items': 'const items = [', 'arr': 'const arr = [', 'ifa': 'if (isArray($0)) {', 'c': 'class $0 {^@    constructor($1) {^@    }', 'ifs': 'if (isString($0)) {', 'for': [1, 'for (let $a of $0) {', function('<lambda>914')], 'div': {'template': '<div>$c</div>', 'cursor': 'smart', 'suffix': ''}, 'lbr': '$$JSPY(''comment'')$$ --------------------------', 'obj': 'const obj = {', 'm': 'method $0($1) {', 'ifo': 'if (isObject($0)) {', 'vc': {'template': 'computed: {^@    ^@},', 'suffix': ''}, 'vd': {'template': 'data() {^@    return {^@        %c^@    }^@},', 'suffix': ''}, 'st': {'snippet': 'setTimeout(() => {^@    %c^@}, $0)'}, 'while': 'while {^@}', 'class': {'snippet': 'class $0 {^@    constructor($1) {^@    }', 'functions': ['Capitalize', 'Identity']}, 'vm': {'template': 'methods: {^@    ^@},', 'suffix': ''}, 'efa': 'else if (isArray($0)) {', 'efo': 'else if (isObject($0)) {', 'vp': 'Vue.prototype.$$0 = function($1) {', 'ef': 'else if ($0) {'}, 'js': {...}, 'py': {...}}
fnlib                 {}
iabpydict             {'ffo': 'for i, file in enumerate(files):', 'ff': 'for file in files:'}
changelog_new_entry_format  ^I* %p%c
physical_location      park
fdict                 {'findall': 'matches', 'search': 'match', 'mreplace': '[text, store]'}
navigationdict        {'test.py': ['prompt', 'inferlang', 'removeComments', 'resolveTextDelta', 'getDuplicates', 'difference', 'intersection', 'messenger', 'required', 'ftest', 'test', 'isIterable', 'filtered', 'isPrimitive', 'isFunction', 'isString', 'isNumber', 'isArray', 'exists', 'isObject', 'isPublic', 'tail', 'identity', 'removeExtension', 'mapped', 'reduced', 'hasExtension', 'getExtension', 'quoted', 'toVariable', 'jspy', 'writejson', 'read', 'pprint', 'stringify', 'toString', 'append', 'write', 'typed', 'mergeObject', 'readjson', 'deepMerge', 'appendMerge', 'datestamp', 'getPreviousDateTime', 'find', 'search', 'dreplace', 'toArray', 'Storage', 'replace', 'force', 'indent', 'log', 'mreplace', 'unique', 'reduce', 'ncg', 'templater', 'iterate', 'ErrorInfo', 'tempest', 'isCode', 'removeEmptyLines', 'mwrite', 'consoleThrow', 'findKey', 'choose', 'findWithin'], 'filesystem.py': ['File', 'filefactory', 'expand', 'mdate', 'isfile', 'isdir', 'removefile', 'normalizepath', 'absdir', 'copyfile', 'isMacbook', 'toDrive', 'getdir', 'ff', 'getfile', 'saveToSandisk', 'review', 'endofday', 'saveToDriveFolder', 'filegetter', 'saveToDrive', 'chdir', 'FileManager', 'mkdir', 'rename', 'prepend', 'mergejson'], 'libra.py': ['getImplied', 'Library', 'blackify', 'organize_python', 'organizeJS', 'getPythonFunctions', 'create_library', 'getFunctions', 'getFunctionName', 'getFunctionNames', 'move_functions_around', 'interactive', 'CodeObject', 'CodeService', 'codesort', 'getDependencies']}
rootdir                /home/kdog3682/
pythonsnippets        {'dec': 'def required(checkpoint):^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@            assert checkpoint(args[0])^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 'pylibs': 'from test import *^@from pprint import pprint as p^@import time^@import sys^@import String^@import webbrowser^@import black^@from filesystem import *^@', 'fore': 'for i, ${GetForIterationVariable($1)} in enumerate($1):^@    $c', 'plib': 'lib = read(''lib.py.json'')', 'check': function('CheckWithInputStop'), 'pyi': 'from test import *^@from filesystem import *^@from libra import *^@^@', 'iter': '[$1(item) for item in $infer]', 'dun': 'def __$1__(self):^@    $c', 'pcf': function('PySnippetConnector'), 'dl': 'log("$1", $1)', 'b': 'from base import *', 'c': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'zoo': 'abc^@abc', 'for': function('ForHandler'), 'dec1': 'def $1(fn):^@    def wrapper(*args, **kwargs):^@        $c^@        return fn(*args, **kwargs)^@^@    return wrapper', 'lorem': '$1 = ${GetLorem($1)}', 'l': '$1 = ${GetLorem($1)}', 'r': 's = read(''$1'')', 'rlp': 'data = read(''lib.py.json'')^@keys = data.keys()^@pprint(keys)^@raise Exception('''')^@values = date.values()^@pprint(values)', 'foo': 'abc^@asdf', 'rlcl': 'pprint(create_library(read(''$1'')))', 'dec2': 'def $1():^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@                ^@            $c^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 's': 's = ''$1''', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'asd': 'dirinfo', 'emptyFunction': 'def foo${MDY()}():^@    $c^@:', 'runner': '    def runner(item):^@    $c    ^@', 'cb': '"""^@$c^@"""'}
notefile               /home/kdog3682/2023/TEXTS/notes.txt
mapleader              ,
globalwpdict          {'sayhi': 'sayhi()'}
runpyfile              /home/kdog3682/PYTHON/run.py
commentdict           {'': '"', 'js': '//', 'py': '#', 'js2': '//', 'vimrc': '"'}
functionRE             ^(function|def|class) 
server_debug          #0
jsdir                  /home/kdog3682/2023/
variableRE             ^(const|\w+ \=)
snippetaliasdict      {'r': 'read', 'gf': 'getfunctions'}
grabmode              #0
snippetdict           {'eater': '<left><Left><C-R>=Eatchar(''s'')<CR>', 'bar': 'baz'}
functionblocktransformdict {'': 'abc s', 'test': 'testing', 'ts': 'toString', 'render': 'render h', 'main': 'main s'}
togglelineindex       #0
dldir                  /mnt/chromeos/MyFiles/Downloads/
visualdict            {'r': function('ReadItemFromSearch'), 'foooooo': function('TestFoo'), 'fooooooooo': function('TestFoo'), 'g': function('GetVisualItem'), 'fzooo': function('TestFoo'), 'k': function('PrintKeys'), 'fzoooo': function('TestFoo'), 'foooooooo': function('TestFoo')}
mreplacematch         #0
wpsnippets            {'vim': {'pcfadd': 'def __add__(self, $2):^@    ', 'line': 'let line = CurrentLine()', 'pcfcall': 'def __call__(self, $2):^@    ', 'head': 'let head = Head()', 'block': 'let block = GetCodeBlock()', 'upline': 'let upline = UpLine()', 'name': 'let name = GetBindingName()', 'bm': '${Timestamp($1)}', 'pcfiter': 'def __iter__(self, $2):^@    ', 'lang': 'let lang = GetLang()', 'js': 'AddPydictItem', 'last': 'let last = GetLastBinding()', 'pcffn': 'def $1($2):^@    ', 'er': 'let g:execRef["${Abrev($1)}"] = "$1"', 'bc': 'BetterConsole', 'dep': 'throw ''deprecation''', 'link': 'let g:filedict["link"] = "$1"', 're': 'RegexBuilder', 'index': 'let index = GetFunctionIndex()', 'e': 'let e = GetExtension()', 'f': 'let g:filedict[''temp''] = ''$1''', 'i': 'SnippetActionJsImport', 'emptyFunction': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'word': 'let word = GetCurrentWord()', 'context': 'let context = GetContext2()', 'hk': 'if has_key($1, ''$2'')^@    $c^@endif', 'w': 'while 1^@    $c^@endwhile', 'ht': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'cur': 'let cursor = GetCursor()', 'file': 'let file = CurrentFile()', 'spaces': 'let spaces = CurrentSpaces()', 'lines': 'let lines = NameMaker()', 'fd': 'let g:filedict["$1"] = "$2"', 'for': 'for item in $1^@    $c^@endfor', 'date': 'let date = DateStamp()', 'ar': 'MakeStringArray2023', 'vt': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'ax': 'b g asd', 'pcfclass': 'def $1(self, $2):^@    ', 'pr': 'props: {^@    $1: {default: ''''},$c^@}', 'if': 'if $1^@    $c^@endif', 'no': 'nnoremap $1 :call $2()<CR>', 'dict': 'MakeStringDict2023', 'de': 'DictEntry2', 'cursor': 'let cursor = GetCursor()', 'tpl': 'UnloadSavedWordsOnTemplate', 'asd': '/* ${Tail(g:filedict[$0])} */'}, 'txt': {'script': '<script>^@$c^@</script>', 'get': '${GetTextIniItems($1)}', 'body': '<body>^@$c^@</body>'}, 'js': {'abcl': 'abc = [''a'', ''b'', ''c'', ''d'', ''e'']', 'abco': 'abc = {''a'': ''a'', ''b'':''b'', ''c'': ''c'', ''d'': ''D'', ''e'': ''e''}', 'rredkv': 'return reduce($1, (k, v) => {^@    $c^@})', 'nullcache': 'const cache = Object.create(null)', 'tss': 'const $1 = this.$store.state.$1', 'ifr': 'if (isRegExp($1)) $c', 'forvals': 'for (let key of Object.keys($1)) {^@    $c^@}', 'ifs': 'if (isString($1)) {^@    $c^@}', 'script': '<script>^@$c</script>', 'iffile': 'if (isfile($1)) $c', 'nestobj': '{a:1, b:2, c:{d:{e: [{g: 1}]}}}', 'ifnum': 'if (isNumber($1)) {^@    $c^@}', 'rpwo': 'rpwo(''$1'', (s) => {^@    $c^@})', 'ef': 'else if ($0) {^@    $c^@}', 'ifswn': 'if (startsWithNumber($1)) {^@    $c^@}', 'abc': 'abc = ''abcde''.split('''')', 'a': 'var $1 = [^@    $c^@]', 'b': 'border: 0.5px solid blue;$c', 'c': 'class ${Capitalize($1)} {^@    constructor($c) {^@    }^@}', 'd': '${SnippetDivMaker($1, $2, $3, ''short'')}', 'e': 'const editor = new TextEditor($1)^@', 'f': 'function f${MonthDay()}() {^@    /* $c */^@}', 'i': 'SnippetActionJsImport', 'm': 'const m = findall(r, s)', 'o': 'var $1 = {^@    $c^@}', 'p': '<p style="color: red">HIII</p>', 'r': 'var {${ JoinComma($notlast) }} = require(''./$last.js'')', 'her': 'const options = {^@    class: ''zork''^@}^@const component = h(''div'', options, $c)^@return component', 't': 'setTimeout(() => {^@    $c^@}, $1)', 'u': '${UseHelper($1)}', 'v': '${Vdiv($0, 1)}', 'efnum': 'else if (isNumber($1)) {^@    $c^@}', 'scrip': '<script src="$1"></script>', 'bml': '/** $c **/', 'ifnest': 'if (isNestedArray($1)) $c', 'vue': 'new Vue({^@    template: `^@        $c^@    `,^@    data() {^@        return {^@            //foo:''boo''^@        }^@    }^@}).$$mount(''#app'')', 'get': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'ifa': 'if (isArray($1)) {^@    $c^@}', 'pr': 'props: {^@    $1: {default: ''''},^@}$c', 'vprop': 'props: ${ArrayExpand($0)},', 'ife': 'if (exists($0)) {^@    $c^@}', 'iff': 'if (isFunction($1)) {^@    $c^@}', 'amo': 'async mounted() {^@    console.log(''hello from ${GetBindingName()}'')^@    await sleep(1000)^@    $c^@},', 'ifn': 'if (!$0) {^@    $c^@}', 'ifo': 'if (isObject($1)) {^@    $c^@}', 'foo': 'function foo${MonthDay()}() {^@    $c^@}', 'fs': 'fs = require(''fs'')', 'data': 'data() {^@    return {^@        fooba: ''hi'',^@        $c^@    }^@},^@', 'ift': 'if (test($1, $2)) {^@    $c^@}', 'ifu': 'if (isUndefined($1)) $c', 'ifnt': 'if (!test(${ZoopbarTestVar($0)})) ', 'mapkv': 'map($1, (k, v) => {^@    $c^@})', 'cng': 'const [$c] = context.numbergen.create()', 'today': 'function today${MonthDay()}() {^@    /* $c */^@}', 'dict': 'MakeStringDict2023', 'rts': 'reduceToString($1, (k,v) => {^@    $c^@})', 'input': '<input @keydown.enter=''onEnter''/>', 'class': 'class ${Capitalize($1)} {^@    constructor($c) {^@    }^@^@}', 'button': '<button class="">$c</button>', 'rsr': 'return s.replace($1, (x) => {^@    $c^@})', 'rjs': 'var {toDashCase,ncg,toArgument,rescape,splitonce,newlineIndent,toDictionary,fparse,match,isIterable,pop,toStringArgument,ncgRunner,getExtension,merge,Storage,reduceObject,assert,bringToLife,templater2,isWord,getStackTrace,gatherArgs,linegetter,getCaller,getParameters,isRegExp,len,type,getLongest,parse,toStringFunction,wrap,filter,brackify,walker,isNestedArray,quotify,ftest,flat,join,stringify,range,indent,partition,singlequote,rng,parens,unique,templater,map,push,smallify,getLast,mreplace,prepareIterable,isPrimitive,findall,replace,capitalize,reduce,split,exists,isNumber,search,isFunction,isString,isObject,isArray,test, char2n, n2char} = require("./utils.js")', 'vuech': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    render(h) {^@        $c^@    },^@}', 'lambda': 'return function lambda(s) {^@    $c^@}', 'vueco': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@    <div>^@        $c^@    </div>`,^@    data() {^@        return {^@            ^@        }^@    },^@}', 'co': '{^@    type: ''story'',^@    value: [^@        $c^@    ],^@},', 'dog': 'foo bar', 'vuect': 'const ${Capitalize($1)} = {^@    components: {},^@    name: ''${Capitalize($1)}'',^@    async mounted() {^@        console.log(''Mounted from ${Capitalize($1)}'')^@        await sleep(1000)^@    },^@    props: [''''],^@    template: `<div class="${Capitalize($1)}">^@        <div>$c</div>^@        <div></div>^@    </div>`,^@    data() {^@        return {^@            //foo:''boo''^@        }^@    },^@    methods: {^@        foo() {^@        ^@        },^@    },^@    computed: {^@        computedProp() {^@        ^@        },^@    },^@    watch: {^@        ^@    },^@}', 'qq': 'question: ''$c'',', 'nu': 'import { writeUnitTest, readUnitTest, read, clip, appendVariable, write, rpw, isFile, sysget, } from "./node-utils.js"', 'vfor': '<div class="abc" v-for="${Slice($1)} in $1">^@    $c^@</div>', 'whereami': '/*  ${FullTimeStamp()}^@    --------------------------------------------^@    $c^@    --------------------------------------------^@*/', 'com': 'component: ''v-mixed'',^@props: {^@    value: ''$c'',^@},', 'coo': 'const options = {^@    fooo: '''',^@}^@$c', 'ifew': 'if ($1.endsWith($2)) $c', 'h1': '<button class="">$c</button>', 'fooboo': 'function foo() {^@    $1^@}^@^@function boo() {^@    foo()^@}^@', 'eff': 'else if (isFunction($1)) {^@    $c^@}', 'ref': 'const ref = {^@    $c^@}', 'vueno': 'Vue.component(''$1'', { template: ''<div class="$1">$1</div>'' })', 'efo': 'else if (isObject($1)) {^@    $c^@}', 'boo': 'if (isFunction(x)) {^@    $c^@}^@^@else if (isArray(x)) {^@    ^@}^@^@else if (isString(x)) {^@    ^@}^@^@else if (isObject(x)) {^@    ^@}', 'efs': 'else if (isString($1)) {^@    $c^@}', 'eft': 'else if (test($2, $1)) {^@    $c^@}', 'ifodd': 'if (isOdd($1)) {^@    $c^@}', 'fpdf': 'from FPDF import fpdf^@fpdf.add_page()^@fpdf.add_font(''symbola'', '''', ''/home/kdog3682/CWF/Symbola.ttf'', uni=True)^@fpdf.set_font(''symbola'', '''', 11)', 'utils': 'var {^@    ^@} = require(''/utils.js'')', 'mounted': 'mounted() {^@    $c^@},', 'rc': 'Vue.component(''$1'', {^@    render(h) {,^@        $c^@    }^@})', 'config': 'const config = {^@    $c^@}', 'for': 'for (let ${GetForIterationVariable($1)} of $1) {^@    $c^@}', 'str': '$1String${MonthDay()} = `^@    $c^@`', 'vuediv': '<div id="app">^@    $c^@</div>', 'hd': 'const $1 = h(''div'', $2, $3)', 'nerd': 'nerdamer = require("nerdamer/all.min")', 'vmo': 'mounted() {^@    $c^@},', 'vms': 'let line = CurrentLine()^@let r = $c^@let m = Search(line, r)', 'ht': 'var ${Pascal($1)} = {^@    name: ''${Pascal($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'qao': '{^@    only: 1,^@    question: "$c",^@    answer(answer, context) {^@    ^@    },^@},', 'qas': '{^@    question: "$c",^@    answer: "",^@},', 'init': 'def __init__($1):^@    $c,', 'html': '<!DOCTYPE html><html>^@    $c^@</html>', 'ox': '{^@    $c,^@},', 'webscript': '<script src="$0"></script>', 'jsc': 'console.log(JSON.stringify($c))', 'wami': '/*  ${FullTimeStamp()}^@    --------------------------------------------^@    $c^@    --------------------------------------------^@*/', 'tpl': 'UnloadSavedWordsOnTemplate', 'lines': 'const lines = lineGetter(s)', 'divc': '<div>^@    $c</div>', 'cidfgdc': 'Vue.component(''$1'', {^@    data() {^@        return {^@            $c^@        }^@    },^@    methods: {^@^@    },^@    computed: {^@^@    },^@    watch: {^@^@    },^@    mounted() {^@^@    },^@    render(h) {^@^@    }^@}', 'jsx': 'console.log(JSON.stringify($1))', 'retcom': 'return {^@    component: '''',^@    value: ''''^@}', 'emptyFunction': 'function foo${MDY()}() {^@    $c^@}^@console.log(foo${MDY()})^@', 'fetch': 'const fetch = require(''node-fetch'')', 'sf': 'function s(s) {^@    $c^@}', 'psc': 'StateContainer.prototype.$1 = function($2) {^@     $c^@}', 'si': 'intervalID = setInterval(() => {^@    $c^@}, $0)', 'while': 'while ($1) {^@^I^@}', 'ss': 'const items = split(s, '' '')', 'if': 'if ($0) {^@    $c^@}', 'ig': 'const $1 = [${F1($middle)}]^@if ($1.includes($last)) {^@    $c^@}', 'katex': '<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css" integrity="sha384-Um5gpz1odJg5Z4HAmzPtgZKdTBHZdw8S29IecapCSB31ligYPhHQZMIlWLYQGVoc" crossorigin="anonymous"><script src="https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.js" integrity="sha384-YNHdsYkH6gMx9y3mRkmcJ2mFUjTd0qNQQvY9VYZgQd7DcN7env35GzlmFaZ23JGp" crossorigin="anonymous"></script>', 'iu': 'if (typeof $1 == ''undefined'') $c', 'main': 'main(`^@$c^@`)', 'forkeys': 'for (let key of Object.keys($1)) {^@    $c^@}', 'render': 'render(h) {^@    $c^@},', 'link': '<link rel="stylesheet" href="$1"/>', 'writer': 'from storage import write^@write(''temp.txt'', $1)', 'clip': 'import { clip, appendVariable } from "./node-utils.js"', 'forer': 'for (let i = $1.length - 1; i >= 0; i--) {^@    let ${$1[:-2]} = $1[i]^@    $c^@    if (i == 0) {^@        ^@    }^@}', 'enter': 'def __enter__(self):^@    return self^@def __exit__(self, error, *args):^@    $c', 'tg': 'TgCols', 'ifthrow': 'if (!$1) throw ''$1 doesnt exist''', 'tx': 'setTimeout(() => {^@    $c^@}, $1)', 'lam': 'const $1 = (x) => {^@    $c^@}', 'qa': '{^@    question: "$c",^@    answer(answer, context) {^@    ^@    },^@},', 'js': 'AddPydictItem', 'center': 'display: flex; align-items: center; justify-content: center;$c', 'vredkv': 'const value = reduce($1, (k, v) => {^@    $c^@})', 'slot': '<slot name=''''>^@    $c^@<slot/>', 'fori1': 'for (let i = 1; i <= $1; i++) {^@    $c^@}', 'crw': 'const children = this.value.map((item, i) => {^@    $c^@})^@return renderWrapper(this, children)', 'sleep': 'await sleep(1000)', 'pcd': 'if (productionConfig.debug) {^@    ${Rep192($1)}^@}', 'ifewn': 'if (endsWithNumber($1)) {^@    $c^@}', 'node': 'var {^@    ^@} = require(''/node-utils.js'')', 'ifal1': 'if (arguments.length == 1) {^@    $c^@}', 'ifal2': 'if (arguments.length == 2) {^@    $c^@}', 'ifal3': 'if (arguments.length == 3) {^@    $c^@}', 'ifal4': 'if (arguments.length == 4) {^@    $c^@}', 'redx': 'reduce($1, (x) => {^@    $c^@})', 'rnl': '    print(key, args)^@    globals().get(key)(*args)', 'forsto': 'for (let [k,v] of storage) {^@ $c^@}', 'wh100': 'width: 100%; height: 100%;$c', 'ifalg1': 'if (args.length > 1) {^@    $c^@}', 'vinput': '<input class="input">{{$1}}</input>', 'forii': 'for (;;) {^@    $c^@}', 'forij': 'for (let i = 0; i < $1; i++) {^@    for (let j = 0; j < placeholder; j++) {^@        $c^@    }^@}', 'deps': 'var { test, parseJSON, sorted, getLast, merge, isObject, exists, findall, toArgument, isFunction, isPrimitive, isString, ftest, isNumber, removeAllComments, search, assert, fixPath, fixPath, datestamp, write} = require(''./utils.js'')', 'lom': 'const $1 = ($2) => {^@    $c^@}', 'forir': 'for (let i = $1; i >= 0; i--) {^@    $c^@}', 'hdiv': 'return h(''div'', ''hi'')', 'kf': '${KeyFramer($0)}', 'vhtml': '<script src="vue.js"></script>^@<link rel="stylesheet" href="styles.css"/>^@<script src="script.js"></script> ^@^@<body>^@    <div id="app"></div>^@</body>^@', 'dir': 'directives: [^@    {^@        name: $c^@        value: ^@    },^@],', 'arr': '${ToArray($0)}', 'switch': 'switch ($1) {^@    $c^@}', 'div': '<div class="$1"></div>', 'ai': '[^@    '''',^@    ''$c''^@],', 's': 'let ${DateString($1)} = `^@    $c^@`', 'redkv': 'reduce($1, (k,v) => {^@    $c^@})', 'csl': 'cssLoader(`^@^I$c^@`)', 'ar': 'MakeStringArray2023', 'css': '$1 {^@    $c^@}', 'vuec': 'const $1 = {^@    props: [],^@    template: `^@        <div>^@        $c^@        </div>^@    `,^@    data() {^@        return {^@            ^@        }^@    },^@}', 'w': 'while (true) {^@^I^@}', 'for2': 'for (let i = 0; i + 1 < $1; i += 2) {^@    $c^@}', 'vuen': 'const ${Capitalize($1)}Component = {^@    props: [''value''],^@    template: `$c`,^@        ^@    data() {^@        return {^@            message: ''hi'',^@        }^@    },^@^@}', 'vueo': 'const $1 = {^@    props: [],^@    template: `^@        <div>^@        $c^@        </div>^@    `,^@    data() {^@        return {^@            ^@        }^@    }^@}', 'vuer': 'const ${Capitalize($1)}Component = {^@    props: [''value''],^@    render(h) {^@        $c^@    },^@^@}', 'lami': 'const $1 = (x, i) => {^@    $c^@}', 'ifeven': 'if (isEven($1)) {^@    $c^@}', 'ren': 'return h($1, {^@    key: i,^@    props:  {^@        focusIt: i == arr.length - 1,^@        $c,^@    }^@})', 'rep': 'let p = s.replace($0, (x) => {^@    $c^@})', 'req': 'var {^@${Indent(join(split($1, ''-''), '',^@''))}^@} = require(''${FileGetter2($2)}'')', 'vb': '<button class="btn" @click="$1">$1</button>', 'vc': 'const $1 = {^@    template: ${tolower($1)}template,^@    data() {^@        return {^@            $c^@        }^@    },^@    methods: {^@^@    },^@    computed: {^@^@    },^@    mounted() {^@^@    },^@}', 'vd': 'data() {^@    return {^@        $c^@    }^@},', 'st': 'setTimeout(() => {^@    $c^@}, $0)', 'vh': 'var ${Capitalize($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''''],^@    render(h) {^@        $c^@    }^@}', 'vm': 'methods: {^@    $c^@},', 'vo': 'var $1 = {^@    $c^@}^@', 'vp': 'Vue.prototype.$$1 = function($2) {^@    $c^@}', 'vt': 'var ${Pascal($1)} = {^@    name: ''${Capitalize($1)}'',^@    props: [''value''],^@    template: `^@        $c^@    `,^@}', 'fore': 'for (let i = 0; i < $1.length; i++) {^@    let ${$1[:-2]} = $1[i]^@    $c^@    if (i == $1.length - 1) {^@        ^@    }^@}', 'vdiv': '<div class="$1">{{$1}}</div>', 'vx': 'var V${Pascal($1)} = vrFactory(''V${Pascal($1)}'')^@function vrParse${Pascal($1)}({value}) {^@    ^@}', 'fori': 'for (let i = 0; i < $1; i++) {^@    $c^@}', 'forj': 'for (let j = 0; j < $1; j++) {^@    $c^@}', 'fork': 'for (let key of Object.keys($1)) {^@    $c^@}', 'ass': 'assert($1, "$1 is required")', 'bc': '${BetterConsole($0)}', 'props': 'props: [''$c''],', 'forv': 'for (let key of Object.keys($1)) {^@    $c^@}', 'spk': 'speak(''$1'')', 'bm': '${Timestamp($1)}', 'write': 'write(${PyWriteHelper($0)})', 'doctype': '<!DOCTYPE html><html><body></body><script src="$c"></script><script src="create.js"></script></html>', 'body': '<body>^@    $c^@</body>', 'npm': 'const $1 = require("$1")', 'crng': 'const n = context.numbergen.create(1)', 'ndy': 'console.log(''ndy'')', 'wae': 'window.addEventListener(''keydown'', $1)', 'comn': 'const r = /^$c/gm^@const matches = findall(r, s)', 'comp': '{^@    component: ''v-mixed'',^@    props: {^@        value: ''$c''^@    },^@    style:'''',    ^@},', 'forenum': 'for (let i = 0; i < $1.length; i++) {^@    let ${Slice($1, 1)} = $1[i]^@    $c^@    if (i == $1.length - 1) {^@        ^@    }^@}', 'rpw': 'function foo${MonthDay()}() {^@    function runner(s) {^@        $c^@    }^@    rpw(''${FileGetter2($1)}'', runner)^@}^@foo${MonthDay()}()', 'vuenoxxx': 'Vue.component(''$1'', {^@    props: [''value''],^@    template: `<div class="$1">$1</div>$c`,^@        ^@    data() {^@        return {^@            message: ''hi'',^@        }^@    },^@})', 'ifnull': 'if (isNull($1)) $c', 'wc': '/*^@    $c^@*/', 'methods': 'methods: {^@    $c^@},', 'wh': function('WhileHandler'), 'forab': 'for (let [a, b] of $1) {^@    $c^@}', 'forkv': 'for (let [k, v] of Object.entries($1)) {^@    $c^@}', 'efa': 'else if (isArray($1)) {^@    $c^@}', 'mo': 'mounted() {^@    console.log(''hello from ${GetBindingName()}'')^@    $c^@},', 'cc': '    console.clear()', 'ce': 'class ${Capitalize($1)} extends ${Capitalize($2)} {^@    constructor($c) {^@    super()^@    }^@}', 'cl': 'console.log(''Line: $lineNumber $1:'', $1)$c', 'imp': 'import {^@    $1,^@    ^@} from "./node-utils.js"', 'runner': 'const runner = ($1) => {^@   $c^@}', 'cp': 'computed: {^@    $c^@},', 'cv': 'computed: {^@    computedValue() {^@        $c^@    },^@},', 'prom': 'return new Promise((resolve) => {^@    $c^@})', 'new': '(new ${Capitalize($1)}($c))', 'jshint': 'const JSHINT = require(''./jshint.js'')', 'computed': 'computed: {^@    computed${Capitalize($1)}() {^@        $c^@    },^@},', 'bug': 'bug(${GetBindingName()})', 'efn': 'else if (!($0) {^@    $c^@}', 'win': 'if (typeof window !== ''undefined'') { module = {}; module.exports = {}; require = () => ({}) }', 'type': 'if (typeof $1 != ''undefined'') {^@    $c^@}^@', 'log': '$1^@console.log($c)', 'xl': 'console.log({LINE: ${line(''.'')}, CALLER: "${GetBlockContext()}", VALUE: $1})', 'vimf': '/home/kdog3682/.vimrc', 'vmap': 'const children = $1.map((child,i) => {^@    return h($c)^@})^@^@const parentOptions = {^@    foo: ''''^@}^@return renderWrapper(this, parentOptions, children)', 'forij1': 'for (let i = 1; i < $1; i++) {^@    for (let j = 1; j < $100; j++) {^@        $c^@    }^@}', 'ifd': 'if (isDefined($1)) {^@    $c^@}', 'np': 'return new Promise((resolve) => {^@    $c^@})', 'src': '<script charset="utf8" src="$1"></script>', 'df': '<ul class="$1">^@    <span v-for="$1">$c</span>^@</ul>', 'rkv': 'return Object.entries($1).reduce((acc, item, i) => {^@    $c^@}, {})', 'vim': 'let file = ''/home/kdog3682/.vimrc''', 'dt': '<!DOCTYPE html><html><body></body><script src="create.js"></script></html>', 'iflast': 'if (getLast($1) == $2)', 'process': 'const process = require(''process'')', 'use': '${UseHelper($1)}', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self${AddParams($2)}$c):'}, 'html': {}, 'py': {'dec': 'def required(checkpoint):^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@            assert checkpoint(args[0])^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 'pylibs': 'from test import *^@from pprint import pprint as p^@import time^@import sys^@import String^@import webbrowser^@import black^@from filesystem import *^@', 'fore': 'for i, ${GetForIterationVariable($1)} in enumerate($1):^@    $c', 'plib': 'lib = read(''lib.py.json'')', 'check': function('CheckWithInputStop'), 'pyi': 'from test import *^@from filesystem import *^@from libra import *^@^@', 'iter': '[$1(item) for item in $infer]', 'dun': 'def __$1__(self):^@    $c', 'pcf': function('PySnippetConnector'), 'dl': 'log("$1", $1)', 'b': 'from base import *', 'c': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'zoo': 'abc^@abc', 'for': function('ForHandler'), 'dec1': 'def $1(fn):^@    def wrapper(*args, **kwargs):^@        $c^@        return fn(*args, **kwargs)^@^@    return wrapper', 'lorem': '$1 = ${GetLorem($1)}', 'l': '$1 = ${GetLorem($1)}', 'r': 's = read(''$1'')', 'rlp': 'data = read(''lib.py.json'')^@keys = data.keys()^@pprint(keys)^@raise Exception('''')^@values = date.values()^@pprint(values)', 'foo': 'abc^@asdf', 'rlcl': 'pprint(create_library(read(''$1'')))', 'dec2': 'def $1():^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@                ^@            $c^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 's': 's = ''$1''', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'asd': 'dirinfo', 'emptyFunction': 'def foo${MDY()}():^@    $c^@:', 'runner': '    def runner(item):^@    $c    ^@', 'cb': '"""^@$c^@"""'}, 'user': {}, 'css': {}}
snippetFunctionalInsertion {'currentfiles': 'GetCurrentBuffersAsString'}
lcs                    
pubdir                 /home/kdog3682/CWF/public/
keypresskeys          {'Enter': '^M'}
globalFunctionRef     {'GLOBALS.py': []}
setdict               {}
commentre              ^(#|//|") ?
pythonWithStateDict   {'btb': 'write=temp.txt.js block writeBlockToBrowser', 'addfiles': {}}
execRef               {'pbg': 'PasteBufferGroupToFile', 'saveall': 'call SaveAll()', 'gf': 'call GoFileGoFunction(''$arg'')', 'dep': 'call BasePY("deprecateFile $cf")', 'bd': 'bd', 'gm': 'call GoBookmark2023("$arg")', 'tsa': 'ToStringArray', 'ai': 'call JAC(''ai'')', 'stop': 'Stop', 'rcf': 'RunCurrentFunction', 'cob': 'call CloseOldestBuffers()', 'olf': 'OpenMostRecentFile', 'rsfw': 'call RunServerFile(''debug screenshot wonderful'')', 'clip': 'call BasePY("fp clip")', 'nu': 'call ExecNU()', 'evtj': 'call ExportVarToJavascript()', 'dbxj': 'call RunServerFile(''debug screenshot'')', 'itm': 'InoremapTestMode', 'git': 'call BasePY("gitPush $cf")', 'ani': 'call AddNewItems()', 'cleaner': 'call CleanerMode(''$arg'')', 'ack': 'call BasePY("appendClipKeys $cf")', 'tt': 'call BasePY("vimFileOpener temp.html")', ':': 'call ExecToc()', 'ec': 'call Echo("$arg")', 'js': 'SaveJS', 'publish': 'call Python2(''publish'', ''$cf'')', 'snf': 'call ShuntNewFile($arg)', 'ma': 'call MathArchive()', 'clone': '!git clone $arg', 'S': 'call SaveAll()', 'setv': 'call SetVFast()', 'prx': 'call PasteReplace()', 'rj': 'call Node(''run.js $arg $cf'')', 'f': 'call FindUpString(''$arg'')', 'ws': 'call BasePY("WorkSummary $cf")', 'mlf': 'call BasePY("mlf")', 'atn': 'ArrowToNormal', 'mk': 'Mk2023', 'm': 'call CodingNote("$arg")', 'o': 'call BasePY("vimFileOpener $arg")', 'q': 'bd', 'cd': 'call ChangeDir(''$1'')', 'u': 'let g:globalState = {}', 'pub': 'call Python2(''publish'', ''$cf'')', 'cp': 'call GrabFunctionFromMaster()', 'dsf': 'call RunServerFile(''debug'')', 'time': 'return ClockStamp()', 'cfn': 'call BasePY("vimMoveFile $cf $arg")', 'bua': 'call BasePY("bua", FPGCB())', 'pr': 'call Node(''print.js'')', 'py': 'call BasePY("fp py")', 'fp': 'call BasePY("fp")', 'tbu': 'call Python2(''temporaryBackup'', CurrentInfo())', 'unmap': 'Unmap', 'date': 'return ClockStamp()', 'gcb': 'return GetCurrentBuffers()', 'sd': 'call ShuntDown1000()', 'isf': 0, 'set': 'call Humya()', 'serve': 'call Node(''/home/kdog3682/2023/serve_html_file.js'', ''$cf'')', 'pdf': 'call BasePY("choosepdf")', 'pip': 'call InstallPip(''$arg'')', 'setjs': 'call SetType()', 'sx': 'call SwapXOnMeasure()', 'npm': 'call InstallNpm(''$arg'')', 'dl': 'call BasePY("fp dl")', 'dbx': 'call RunServerFile(''debug'')', 'scf': 'call SourceCurrentFile()', 'aifl': 'call JSFileRunner(''addMissingImportsFromDependencyLibrary'')', 't2': 'call BasePY("vimFileOpener test2.html")', 'clr': '1,$d'}
changelog_new_date_format  %d  %u^@^@^I* %p%c^@^@
runpuppeteerfile       /home/kdog3682/CWF/public/puppet.js
did_load_ftplugin     #1
myvimrc                /home/kdog3682/.vimrc
pythonconnectordict   {'mover': {'file': 'apps.py', 'arg': 'cf', 'fn': 'multisweep'}, 'ask': {'file': '/home/kdog3682/CWF/redditscript.py', 'arg': '', 'fn': 'ask'}, 'ga': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 's', 'fn': 'global_action'}, 'incb': {'file': '/home/kdog3682/CWF/apps.py', 'args': [], 'fn': 'incorporateBuffersToHtmlFile'}, 'review': {'file': '/home/kdog3682/CWF/apps.py', 'args': [], 'fn': 'reviewfiles'}, 'task': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf', 's'], 'fn': 'taskmaster', 'combineArgs': 1}, 'msd': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf'], 'fn': 'move_stuff_down'}, 'jsax': {'file': '/home/kdog3682/CWD/jsa.js', 'arg': 'cf', 'fn': 'main'}, 'ed': {'file': 'apps.py', 'args': ['cf', 'cfn'], 'fn': 'extractDependencies'}, 'abc': {'normal': 'gg'}, 'reply': {'file': '/home/kdog3682/CWF/redditscript.py', 'arg': '', 'fn': 'reply'}, 'open': {'file': '/home/kdog3682/CWF/test.py', 'args': 's', 'fn': 'openfile'}, 'scrape': {'file': '/home/kdog3682/CWF/scrape.py', 'args': ['s', 's'], 'fn': 'main'}, 'openfile': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['s'], 'fn': 'openLocalFile'}, 'prt': {'file': '/home/kdog3682/CWF/public/pretty.js', 'args': ['cf']}, 'mlf': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['s'], 'fn': 'mlf'}, 'g': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 's', 'fn': 'google'}, 'import': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf', 's'], 'fn': 'importer'}, 's': {'file': '/home/kdog3682/CWF/apps.py', 'args': [], 'fn': 'serve'}, 'savetoday': {'file': '/home/kdog3682/CWF/apps.py', 'args': [''], 'fn': 'savetoday'}, 'append': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf', 's'], 'fn': 'invivoappender'}, 'extract': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf', 's'], 'fn': 'extraction'}, 'text': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 's', 'fn': 'sendtwilio'}, 'pkg': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['s'], 'fn': 'packageGithubToFolder'}, 'dirinfo': {'file': 'apps.py', 'arg': '', 'fn': 'dirinfo'}, 'pf': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf'], 'fn': 'postFileToJsonbin'}, 'geni': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf', 'fg'], 'fn': 'genImports2'}, 'jsa': {'file': '/home/kdog3682/CWD/jsconnector.js', 'arg': 'cf', 'fn': 'jsa'}, 'wame': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf'], 'fn': 'writeAllModuleExports'}, 'fa': {'file': 'redditscript.py', 'arg': 's', 'fn': 'fastask'}, 'ff': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 's', 'fn': 'ffrunner'}, 'save': {'file': 'apps.py', 'arg': '', 'fn': 'savetoday'}, 'bkl': {'file': '/home/kdog3682/CWF/bkl.py', 'arg': 's', 'fn': 'brookynlearninghandler'}, 'geval': {'file': '/home/kdog3682/CWF/apps.py', 'arg': '', 'fn': 'grequestevalwrapper'}, 'clear': {'normal': 'ggVGd'}, 'dlg': {'file': 'download_github_gist.py', 'arg': '', 'fn': 'download_github_gist'}, 'serve': {'file': '/home/kdog3682/CWF/apps.py', 'args': [], 'fn': 'serve'}, 'sh2b': {'file': 'apps.py', 'arg': 'cf', 'fn': 'shuntToBottom'}, 'ic': {'file': '/home/kdog3682/CWF/apps.py', 'args': [], 'fn': 'incorporateCss'}, 'ss': {'file': '/home/kdog3682/CWF/multisweep.py', 'arg': 'cf', 'fn': 'multisweep'}, 'st': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['s'], 'fn': 'sendtwilio'}, 'ssnc': {'file': 'single_sweep.py', 'args': ['cf', 0], 'fn': 'singlesweep'}, 'move': {'file': 'apps.py', 'arg': 's', 'fn': 'FileMover'}, 'req': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf'], 'fn': 'getJsRequire'}, 'gi3': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 'cf', 'fn': 'genImports3'}, 'rev': {'file': '/home/kdog3682/CWF/apps.py', 'args': ['cf'], 'fn': 'rev'}, 'package': {'file': '/home/kdog3682/CWF/apps.py', 'arg': 's', 'fn': 'packageGithub'}, 'asd': {'file': '/home/kdog3682/CWF/githubscript.py', 'args': [], 'fn': 'uploadWebsiteFromHtmlFile'}}
globaltabwidth             
saved_words           []
dirdict               {'/home/kdog3682/CWF/public': '/home/kdog3682/CWF', 'drive': '/mnt/chromeos/GoogleDrive/MyDrive/', 'cwf': '/home/kdog3682/CWF', 'cw': '/home/kdog3682/CWF', '''''': '/home/kdog3682/CWF', 'cwd': '/home/kdog3682/CWD', 'downloads': '/mnt/chromeos/MyFiles/Downloads/', '0104': '/mnt/chromeos/GoogleDrive/MyDrive/CWF/01-04-2022/', 'trash': '/home/kdog3682/CWF/TRASH', 'dl': '/mnt/chromeos/MyFiles/Downloads/', 'a': 'ASSETS', 'macbook': '/users/harfunmaterials/', '/home/kdog3682/CWF': '/home/kdog3682/CWF/public', '.': '/home/kdog3682/CWF', '8': '08-22-2021', 'drivecwf': '/mnt/chromeos/GoogleDrive/MyDrive/CWF'}
jspykey                
dictref               {'p': 'pydict', 'l': 'ldrdict', 'rc': 'replacecdict'}
cdir                   /home/kdog3682/PYTHON/
pybackdict            {'tos': '${VarializeTheString($0)}$c'}
noteRef               {'a': ['activity-info.txt', '$ds $tail $function', 1], 'doc': ['~/.notes', '$ds: $0', 1], 'function-notes': ['~/.functions', '$ds $bf $parent $0', 0], 'help': ['helpdocs.txt', '$file $fn $parent $0', 1], 'callable': ['code.notes', '$fn: $0', 1], 'html': ['code.notes', '$ds: $0', 1], 'file-notes': ['file-notes.txt', '$ds $bf $0', 0], 'DEFAULT': ['/home/kdog3682/CWF/notes.txt', '$ds: $0', 0], 'file-help': ['file-help.txt', '$ds $file $0', 1]}
shuntdestination       
lastrc                 fn/kwargs.get('fn')
appendlib             {'bash': 'alias $0=''$1'''}
basepyref             {'ur': 'uploadResume', 'rfa': 'base.py _reddit ask', 'sc': 'saveClip', 'rdr': 'base.py _reddit reply', 'gvval': 'base.py google_request', 'ofile': 'base.py ofile', 'olf': 'openLastFile', 'ra': 'base.py _reddit ask', 'bu': ':backup cfs', 'gval': 'base.py google_eval', 'kd': '_github.py main kdog3682.github.io $kdoghtml', 'ff': 'base.py ff', 'gcval': 'base.py google_request', 'gvbbal': 'base.py google_request', 'ac': 'base.py _addcss', 'rr': 'base.py _reddit reply', 'od': 'outboundData', 'rbr': 'base.py _reddit reply'}
defaultfunctioncallstring  Declare Your own FunctionCall Value
vimfile                /home/kdog3682/.vimrc
SOLTabDictionary      {}
activeDictionary       EditorCommands
solsnippets           {'vim': {'lang': 'let lang = GetLang()', 'line': 'let line = CurrentLine()', 'zzop': 'function AppendVim(lines, ...)', 'drive': 'let gdrive = ''/mnt/chromeos/GoogleDrive''', 'spc': 'let spaces = GetSpaces(otherLine)', 'block': 'let block = GetCodeBlock()', 'file': 'let file = CurrentFile()', 'spaces': 'let spaces = CurrentSpaces()', 'name': 'let name = GetFunctionName()', 'lines': 'let lines = GetLines()', 'apv': 'call AppendVimAndExecute(s)', 'cword': 'let cword = expand(''<cword>'')', 'e': 'let e = GetExtension(file)', 'cursor': 'let cursor = GetCursor()', 'ab': 'let [a,b] = SplitOnce(a:s)', 'word': 'let word = GetCurrentWord()', 'hi': 'ec ''''saying hi''''', 's': 'let s = CurrentLine()', 'gdrive': 'let gdrive = ''/mnt/chromeos/GoogleDrive''', 'ch': 'let ch = GetCursor()', 'fa': 'let m = FindallStrings(s, regex)'}, 'js': {'clock': 'const clock = new Clock()', 'le': 'const lineEdit = new LineEdit()', 'iter': 'const iter = new Iter()', 'lk': 'console.log(cmLook(cm, wrapper))', 'cache': 'const cache = new Cache()', 'lcn': 'look(cursor); cursor.next()', 'items': 'const items = split(x)', 'sup': 'cmInsert(cm, ''sup'')', 'name': 'const name = getFunctionName(s)', 'params': 'const params = getParameters($c)', 'gsl': 'let [spaces, text] = getIndentAndLine(line.text)', 'ifwin': 'if(typeof window!==''''undefined''''){module={};module.exports={};require=()=>({})}', 'cou': 'let count = 0', 'eater': 'const eater = new Eater()', 'tt': 'const textTokenizer = new TextTokenizer()', 'ee': 'const eventEmitter = new EventEmitter()', 'ifwu': 'if (typeof window == ''undefined'')', 'last': 'const last = getLast($c)', 'count': 'let count = 0', 'ew': 'const errorWatcher = new ErrorWatcher()', 'mdy': 'const mdy = getMDY($c)', 'editor': 'const editor = new FileEditor()', 'we': 'const wbooError = new WbooError()', 'c': 'let count = 0', 'node': 'let node = syntaxTree()', 'h': 'const h = state.$createElement', 'seen': 'const seen = new Set()', 'm': 'const matches = findall(regex, s)', 'rw': 'var { write, read } = require(''''./node-utils.js'''')', 'mr': ':key=''''Math.random()''''', 'ci': 'const item =', 'cl': 'const codeLibrary = new CodeLibrary()', 'caller': 'const caller = getCaller($c)', 'year': 'const year = getYear($c)', 'text': 'const text = textgetter(f)', 'spaces': 'const spaces = getSpaces($c)', 'mod': '', 'fade': 'const fadestring = ''''.fade-enter-active { transition: opacity 1s } .fade-leave-active { transition: opacity 0.75s; } .fade-enter, .fade-leave-to { opacity: 0;}''''', 'words': 'const words = split(s)', 'vfa': 'vue.farAwayIncrement(''ctopiclevel'')', 'div': '<div>hi</div>', 'sto': 'const storage = new Storage(Array)', 'builder': 'const builder = new Builder()', 'chunks': 'const chunks = getChunks($c)', 'al': 'const length = args.length', 'ifs': 'if(typeof window!==''''undefined''''){module={};module.exports={};require=()=>({})}', 'table': 'const table = new Table()', 'indent': 'const indent = getIndent($c)', 'so': 'const standardObject = new StandardObject()', 'ib': 'const incrementalBuilder = new IncrementalBuilder()', 'ie': 'const indexError = new IndexError()', 'ii': 'const itemIter = new ItemIter()', 'im': 'const indexedMap = new IndexedMap()', 'ivrv': 'if (value) return value', 'store': 'const store = []', 'first': 'const first = getFirst($c)', 'dn': 'Date.now()', 'ab': 'let [a,b] =', 'matrix': 'const matrix = new Matrix()', 'snull': 'if (s == null) return', 'mtsc': 'const [question, numbers] = this.mt.shortcut(x)', 'ifnes': 'if (!exists(s)) return', 'clo': 'const codeLibraryObject = new CodeLibraryObject()', 'clp': 'console.log(Object.keys(this.$refs))', 'storage': 'const storage = new Storage()', 'qg': 'const qg = new QuestionGenerator3()', 'lc': 'let count = 0'}, 'html': {'script': '<script></script>', 'app': '<script>^@const app = new Vue(main).$mount(''''#app'''')^@</script>', 'hb': '<!------------------------------------------------>'}, 'py': {'rf': 'm = re.findall(r, read(vim.''''/home/kdog3682/.vimrc''''))', 'it': 'iterate(name, runner)', 'serj': 'serj = ''''/home/kdog3682/CWD/service.json''''', 'today': 'today = datetime.datetime.today()', 'ppold': 'pprint(os.listdir(dirgetter(dir)))', 'size': 'size = os.path.getsize(file)', 'ppr': 'from pprint import pprint', 'osgc': 'dir = os.getcwd()', 'pp': 'pprint(matches)', 'faf': 'matches = re.findall(regex, read(file), flags=re.M)', 'dir': 'dir = dirgetter(dir)', 'libref': 'libref = ''''/home/kdog3682/CWD/service.json''''', 'temp': 'return write(''tempest.json'', ', 'git': 'git = ''''https://api.github.com/users/''''', 'ifname': 'if __name__ == ''__main__'':', 'ee': 'except Exception as e:'}, 'css': {}}
ck                     VBuild
rsf                   {'ak': {'index': 0, 'items': ['screenshot', 'html', 'print', 'clip', 'windowString']}, 'pk': {'index': 0, 'items': ['implicit', 'string', 'clip', 'ws2draft', 'ws2final']}}
vuenavigationdict     {'qgd': 'QNavData', 'qgt': 'QNavTemplate', 'ctr': 'QNavConstructor'}
jslogic               {'null': 'isNull($1)', 'iter': 'isIterable($1)', 'sw': 'test(/^$1/, $2)', 'al1': 'arguments.length == 1', 'al2': 'arguments.length == 2', 'al3': 'arguments.length == 3', 'err': 'isError($1)', 'def': 'isDefined($1)', 'nsw': '$not test(''^$1'', $2)', 'name': '$1.constructor.name == ''$2''', 'hla': 'hasLookAround($1)', 'prim': 'isPrimitive($1)', 'hvx': 'hasVariableX($1)', 'di': 'isDoubleIterable($1)', 'iae': 'isAllEqual($1)', 'eb': 'isEnterBlock($1)', 'swsw': 'startsWithSingleWord($1)', 'jp': 'isJsonParsable($1)', 'pos': 'isPositive($1)', 'it': 'isIterable($1)', 'eq': '$1 == ''$2''', 'ew': '$1.endsWith(''$2'')', 'a0e': 'args[0] == $1', 'a2e': 'args[2] == $1', 'pro': 'isPromise($1)', 'iscp': 'isSingleCssProperty($1)', 'a': 'isArray($1)', 'c': 'isClass($1)', 'e': 'exists($1)', 'node': 'isNode()', 'bool': 'isBoolean($1)', 'iha': 'isHtmlAttr($1)', 'hc': 'hasColon($1)', 'hd': 'hasDash($1)', 'nod': 'isNode($1)', 'n': 'isNumber($1)', 'o': 'isObject($1)', 'word': 'isWord($1)', 'r': 'isRegExp($1)', 's': 'isString($1)', 't': 'test($1, $2)', 'iasw': 'isAllSingleWords($1)', 'hn': 'hasNewline($1)', 'ho': 'hasOwn($1)', 'hs': 'hasSpaces($1)', 'cn': '$1.constructor.name == $2', 'hw': 'hasWord($1)', 'tod': 'isToday($1)', 'new': '$not test(''$1$'', $2)', 'he': 'hasEquals($1)', 'url': 'isUrl($1)', 'pi': 'parseInt($1)', 'hcc': 'hasCamelCase($1)', 'hg': 'hasGFlag($1)', 'hcg': 'hasCaptureGroup($1)', 'cap': 'isCapitalized($1)', 'hh': 'hasHtml($1)', 'sym': 'isSymbol($1)', 'ni': '!$1', 'ac': 'isAllCaps($1)', 'issl': 'isSingleLine($1)', 'sto': 'isStorage($1)', 'ft': 'ftest($1, $2)', 'ele': 'isElement($1)', 'hl': 'hasLetter($1)', 'sel': 'isSelector($1)', 'sc': 'isStandardCss($1)', 'tru': 'isTrue($1)', 'isf': 'isFraction($1)', 'sh': 'isStandardHtml($1)', 'set': 'isSet($1)', 'isi': 'isInteger($1)', 'ne': '!exists($1)', 'l1': 'len($1) == 1', 'l2': 'len($1) == 2', 'l3': 'len($1) == 3', 'nl': 'isNewLine($1)', 'num': 'isNumber($1)', 'no': 'isNode()', 'all1': 'args.length == 1', 'all2': 'args.length == 2', 'all3': 'args.length == 3', 'yes': 'isYesterday($1)', 'int': 'isInteger($1)', 'alg1': 'args.length > 1', 'swp': 'startsWithPeriod($1)', 'sws': 'startsWithSymbol($1)', 'isvw': 'isVeryWordy($1)', 'nest': 'isNestedArray($1)', 'not': '!$1', 'jso': 'isJson($1)', 'hsk': 'hasSharedKeys($1)', 'a1e': 'args[1] == $1', 'und': 'isUndefined($1)', 'f': 'isFunction($1)', 'ewn': 'endsWithNumber($1)', 'fir': 'isFirst($1)'}
langaliasdict         {'vim': 'vim', 'js2': 'js'}
activetempbinding     {}
bookmarktracker        M
bookmarks2023         {'ox': ['/home/kdog3682/2023/OX3HTML.js', 'OX3HTML', '        /** i **/'], 'gih': ['/home/kdog3682/.vimrc', 'GetIndexesHelper2', 'function GetIndexesHelper2(key) abort'], 'ps': ['/home/kdog3682/2023/parse.js', 'ParseState', '        addProperty(this.store, ...args)'], 'blfaf': ['/home/kdog3682/.vimrc', 'BookmarkLineFileAndFunction', '    let file = CurrentFile()']}
grabbuffer             utils.py
insertionlocation     #0
xis                    ((${GetXName($0)}, i) => {^@    $c^@})
logic2022             {'vim': {'a': 'IsArray($1)', 's': 'IsString($1)', 't': 'Test(''$1'', $2)', 'e': 'Exists($1)', 'f': 'IsFunction($1)', 'w': 'while 1', 'Isi': 'IsNumber($1)', 'Isf': 'IsFile($1)', 'ne': '!Exists($1)', 'n': '!Exists($1)', 'o': 'IsObject($1)'}, 'js': {'null': 'isNull($1)', 'iter': 'isIterable($1)', 'sw': 'test(/^$1/, $2)', 'al1': 'arguments.length == 1', 'al2': 'arguments.length == 2', 'al3': 'arguments.length == 3', 'err': 'isError($1)', 'def': 'isDefined($1)', 'nsw': '$not test(''^$1'', $2)', 'name': '$1.constructor.name == ''$2''', 'hla': 'hasLookAround($1)', 'prim': 'isPrimitive($1)', 'hvx': 'hasVariableX($1)', 'di': 'isDoubleIterable($1)', 'iae': 'isAllEqual($1)', 'eb': 'isEnterBlock($1)', 'swsw': 'startsWithSingleWord($1)', 'jp': 'isJsonParsable($1)', 'pos': 'isPositive($1)', 'it': 'isIterable($1)', 'eq': '$1 == ''$2''', 'ew': '$1.endsWith(''$2'')', 'a0e': 'args[0] == $1', 'a2e': 'args[2] == $1', 'pro': 'isPromise($1)', 'iscp': 'isSingleCssProperty($1)', 'a': 'isArray($1)', 'c': 'isClass($1)', 'e': 'exists($1)', 'node': 'isNode()', 'bool': 'isBoolean($1)', 'iha': 'isHtmlAttr($1)', 'hc': 'hasColon($1)', 'hd': 'hasDash($1)', 'nod': 'isNode($1)', 'n': 'isNumber($1)', 'o': 'isObject($1)', 'word': 'isWord($1)', 'r': 'isRegExp($1)', 's': 'isString($1)', 't': 'test($1, $2)', 'iasw': 'isAllSingleWords($1)', 'hn': 'hasNewline($1)', 'ho': 'hasOwn($1)', 'hs': 'hasSpaces($1)', 'cn': '$1.constructor.name == $2', 'hw': 'hasWord($1)', 'tod': 'isToday($1)', 'new': '$not test(''$1$'', $2)', 'he': 'hasEquals($1)', 'url': 'isUrl($1)', 'pi': 'parseInt($1)', 'hcc': 'hasCamelCase($1)', 'hg': 'hasGFlag($1)', 'hcg': 'hasCaptureGroup($1)', 'cap': 'isCapitalized($1)', 'hh': 'hasHtml($1)', 'sym': 'isSymbol($1)', 'ni': '!$1', 'ac': 'isAllCaps($1)', 'issl': 'isSingleLine($1)', 'sto': 'isStorage($1)', 'ft': 'ftest($1, $2)', 'ele': 'isElement($1)', 'hl': 'hasLetter($1)', 'sel': 'isSelector($1)', 'sc': 'isStandardCss($1)', 'tru': 'isTrue($1)', 'isf': 'isFraction($1)', 'sh': 'isStandardHtml($1)', 'set': 'isSet($1)', 'isi': 'isInteger($1)', 'ne': '!exists($1)', 'l1': 'len($1) == 1', 'l2': 'len($1) == 2', 'l3': 'len($1) == 3', 'nl': 'isNewLine($1)', 'num': 'isNumber($1)', 'no': 'isNode()', 'all1': 'args.length == 1', 'all2': 'args.length == 2', 'all3': 'args.length == 3', 'yes': 'isYesterday($1)', 'int': 'isInteger($1)', 'alg1': 'args.length > 1', 'swp': 'startsWithPeriod($1)', 'sws': 'startsWithSymbol($1)', 'isvw': 'isVeryWordy($1)', 'nest': 'isNestedArray($1)', 'not': '!$1', 'jso': 'isJson($1)', 'hsk': 'hasSharedKeys($1)', 'a1e': 'args[1] == $1', 'und': 'isUndefined($1)', 'f': 'isFunction($1)', 'ewn': 'endsWithNumber($1)', 'fir': 'isFirst($1)'}, 'py': {'new': '$not test(''$1$'', $2)', 'isd': 'isdir($1)', 'isf': 'isfile($1)', 'al2': 'arguments.length == 2', 'cwxdn': 'not $1', 'isi': 'isInteger($1)', 'eq': '$1 == $2', 'l1': 'if len($1) == 1', 'l2': 'if len($1) == 2', 'l3': 'if len($1) == 3', 'lt': 'len($1) < $2', 'a0e': 'args[0] == $1', 'num': 'isNumber($1)', 'csdfwdxxn': 'not $1', 'a2e': 'args[2] == $1', 'pi': 'parseInt($1)', 'al1': 'arguments.length == 1', 'a': 'isArray($1)', 'hvx': 'hasVariableX($1)', 'isvw': 'isVeryWordy($1)', 'f': 'isFunction($1)', 'a1e': 'args[1] == $1', 'issl': 'isSingleLine($1)', 'n': 'not $1', 'o': 'isObject($1)', 'al3': 'arguments.length == 3', 's': 'isString($1)', 't': 'test(''$1'', $2)', 'cwdxxn': 'not $1', 'nsw': '$not test(''^$1'', $2)', 'nisf': 'not isfile($1)', 'cn': '$1.constructor.name == $2', 'ewn': 'endsWithNumber($1)'}}
pysnippetref          {'dec': 'def required(checkpoint):^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@            assert checkpoint(args[0])^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 'pylibs': 'from test import *^@from pprint import pprint as p^@import time^@import sys^@import String^@import webbrowser^@import black^@from filesystem import *^@', 'fore': 'for i, ${GetForIterationVariable($1)} in enumerate($1):^@    $c', 'plib': 'lib = read(''lib.py.json'')', 'check': function('CheckWithInputStop'), 'pyi': 'from test import *^@from filesystem import *^@from libra import *^@^@', 'iter': '[$1(item) for item in $infer]', 'dun': 'def __$1__(self):^@    $c', 'pcf': function('PySnippetConnector'), 'dl': 'log("$1", $1)', 'b': 'from base import *', 'c': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'zoo': 'abc^@abc', 'for': function('ForHandler'), 'dec1': 'def $1(fn):^@    def wrapper(*args, **kwargs):^@        $c^@        return fn(*args, **kwargs)^@^@    return wrapper', 'lorem': '$1 = ${GetLorem($1)}', 'l': '$1 = ${GetLorem($1)}', 'r': 's = read(''$1'')', 'rlp': 'data = read(''lib.py.json'')^@keys = data.keys()^@pprint(keys)^@raise Exception('''')^@values = date.values()^@pprint(values)', 'foo': 'abc^@asdf', 'rlcl': 'pprint(create_library(read(''$1'')))', 'dec2': 'def $1():^@    def decorator(fn):^@        def wrapper(*args, **kwargs):^@                ^@            $c^@            return fn(*args, **kwargs)^@^@        return wrapper^@    return decorator', 's': 's = ''$1''', 'cls': 'class ${Capitalize($1)}:^@    def __init__(self, $c):^@        ', 'asd': 'dirinfo', 'emptyFunction': 'def foo${MDY()}():^@    $c^@:', 'runner': '    def runner(item):^@    $c    ^@', 'cb': '"""^@$c^@"""'}
htmldir                /home/kdog3682/CWF/public/
productiondir          /home/kdog3682/PRODUCTIONS/
qsnippetdict          {'js': {}, 'py': {}, 'global': {}}
debug                  DEBUG
basedir                /home/kdog3682/CWF/
notesfile              notes.txt
qwordref              {'keep': 'keep up the good work.', 'joy': 'is a joy to have in class.'}
vuenavdict            {'mo': '(created|mounted)\(\) \{', 'computed': 'computed: \{', 'data': 'data\(\) \{', 'template': 'template:', 'constructor': 'constructor', 'cr': '(created|mounted)\(\) \{', 'methods': 'methods: \{', 'ren': 'render\(', 'ctr': 'constructor'}
filepickerdict        {'v': '/home/kdog3682/2023/variables.js', 'g': '/home/kdog3682/2023/HTMLBuilder.js'}
funcnamere             ^(function|def|class) \zs\w+
htmldict              {'section': 'section', 'div': 'div'}
vimrciabdict          {'a': 'asd'}
npsref                {'vdir': '$1, {^@    $c^@}, $2'}
activedir              /home/kdog3682/2023/
budir                  /mnt/chromeos/GoogleDrive/MyDrive/BACKUP/
servedir               /home/kdog3682/SERVER/
iabref                {'py': {'ffo': 'for i, file in enumerate(files):', 'ff': 'for file in files:'}, 'math': {'p': ' + ', 'q': '^2', 't': ' * ', 'e': '^', 'big': 'expand ', 'div': ' ÷ ', '=': ' = ', 'sim': 'simplify ', '-': ' - '}}
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
functionfilerefjson    /home/kdog3682/2023/functionfileref.json
changelog_date_entry_search  ^\s*%d\_s*%u
bindingPrefixRE        ^(var|let|const|async|function!?|class|def) \zs
pythonconnectorfile    ~/CWF/base.py
b:did_ftplugin        #1
b:undo_ftplugin        call VimFtpluginUndo()
b:changedtick         #5684
b:did_add_maps        #1
b:deleterange         #1
w:paren_hl_on         #0
w:netrw_prvfile        /home/kdog3682/2023/vim.mappings.txt
s:match                
v:beval_winid         #0
v:version             #802
v:null                 v:null
v:beval_winnr         #0
v:errors              []
v:versionlong         #8022434
v:lnum                #0
v:hlsearch            #0
v:t_channel           #9
v:scrollstart          Shell line 1
v:oldfiles            ['/mnt/chromeos/MyFiles/Downloads/openai (6).json', '~/.vimrc', '~/2023/output.js', '~/2023/chatGptDownloader.js', '~/2023/elementObjects.js', '~/2023/temp.js', '~/2023/pdfgen.colors.js', '~/2023/css-utils.js', '~/2023/directives.js', '~/2023/worksheet-components-2.js', '~/.vim/ftplugin/javascript.vim', '~/2023/append.vim', '~/2023/vim.append', '~/2023/pdfgen.make.js', '~/2023/.gitignore', '~/2023/vue.esm.browser.js', '~/2023/vue.min.js', '~/2023/vue.js', '~/2023/codeOrganizer.js', '~/2023/a.js', '~/2023/reddit.json', '~/2023/Puppeteer.js', '~/2023/javascriptApps.js', '~/2023/serve_html_file.js', '~/2023/App.js', '~/2023/node-utils.js', '~/2023/log.json', '~/PYTHON/base.py', '~/PYTHON/ga.py', '~/2023/serverArgManager.js', '~/2023/utils.js', '~/2023/changelog.md', '~/2023/makePDF.js', '~/2023/colorbrewer.js', '~/2023/variables.js', '~/2023/gpt.html', '~/2023/style.css', '~/2023/mp', '~/2023/mpd', '~/2023/build.html', '~/2023/ham.html', '~/CWF/logging.js', '~/PYTHON/pdf.py', '~/2023/clip.js', '~/PYTHON/env.py', '~/2023/ws2.vob.js', '~/2023/OX3HTML.js', '~/2023/htmlBuilder.js', '~/2023/props.json', '~/2023/vueSetup.js', '~/VIM/variables.vim', '~/2023/vue-utils.js', '~/2023/parser-factories.js', '~/2023/vueData.js', '~/2023/av', '~/VIM/functions.vim', '~/2023/oe', '~/2023/serverProductionManager.js', '~/PYTHON/run.py', '~/2023/browser-utils.js', '~/2023/chalk.js', '~/2023/HTMLBuilder.js', '~/2023/StateContext.js', '~/TEXTS/code.learning.txt', '~/2023/LineEdit.js', '~/2023/lorem.js', '~/CWD/pdfgen-state.js', '~/2023/scratchpad.js', '~/2023/element-utils.js', '~/CWF/public/clip.js', '~/2023/buildServerHTML.js', '~/2023/ec.html', '~/2023/bsh', '~/2023/ps', '~/2023/main.js', '~/2023/menu.vue', '~/2023/menu.vue.js', '~/2023/textEdit.js', '~/TEXTS/grades.txt', '~/2023/gpt.examples', '~/2023/ec.js', '~/2023/b.js', '~/2023/compileRE.js', '~/2023/base.css', '~/CWF/public/color-utils.js', '~/2023/color-utils.js', '~/2023/chroma.js', '~/2023/chroma.min.js', '~/2023/uglify.js', '~/CWF/public/class.js', '~/2023/Lezer.js', '~/2023/ma.js', '~/PYTHON/pushshift.py', '~/PYTHON/redditscript.py', '~/CWF/storage.py', '~/CWF/run.py', '~/CWF/redditscript.py', '~/2023/spellcheck.js', '~/2023/consumableParse.js', '~/2023/gpt.js', '~/2023/production.config.js', '~/PYTHON/dalle.py', '~/PYTHON/tess.py', '~/.ssh/known_hosts', '~/2023/temp.txt', '~/2023/elementControllerComponents.js', '~/2023/master.js.json', '~/2023/master.json', '~/PYTHON/chatgpt.py', '~/2023/temp', '~/2023/CodeOrganizer.js', '~/2023/gpt.txt', '~/2023/t.js', '~/2023/clock.js', '~/2023/unitTests.json', '~/2023/bs', '~/2023/bh', '~/JSONS/css.abrevs.json', '~/2023/casperChineseComponents.js', '~/2023/TEXTS/notes.txt', '~/CWF/jch/utils.js', '~/CWF/public/mc.js', '~/2023/worksheet-components.js', '~/2023/hammyComponents.js', '~/2023/createServerHTML.js', '~/2023/create_production_html.js', '/usr/share/vim/vim82/doc/pi_netrw.txt', '~/2023/createRNG.js', '~/2023/hammyConfig.js', '~/2023/notes.txt', '~/2023/s.js', '~/2023/cypher.js', '~/CWD/vuestore.js', '~/2023/WindowStorage.js', '~/2023/comments.js', '~/2023/clip.html', '~/2023/hammy.html', '~/2023/serverApps.js', '~/2023/index.html', '~/2023/t.html', '~/2023/chat2.html', '~/2023/chat.html', '~/2023/chatgpt.html', '~/2023/chatgpt-generated-html.html', '~/2023/flashcards.html', '~/2023/asdf.html', '~/2023/DateObject.js', '~/2023/hammy-components.js', '~/2023/ham.js', '~/2023/fixProse.js', '~/PYTHON/zipscript.py', '~/2023/;38', '~/2023/code-notes.txt', '~/CWF/public/browser.js', '~/2023/components.js', '~/2023/browser.js', '~/CWF/public/vue-utils.js', '~/CWF/public/math', '/media/fuse/crostini_25bd1ae3ef71bac8d459747ce670faa67d509f14_termina_penguin/CWF/public/vue-utils.js', '~/2023/generateMultipleChoice.js', '~/2023/quiz.txt', '~/2023/nerdSolver.js', '~/2023/generated.css', '~/CWD/css-parser.js', '~/2023/Classroom.js', '~/2023/fixMath.js', '~/2023/createVueComponentPropRef.app.js', '~/2023/dialogue.txt', '~/2023/ask.js', '~/2023/latex.js', '~/2023/vob.worksheet.js', '~/2023/mathApps.js', '~/2023/javascript.dependencies.json', '~/2023/javascript.master.json', '~/2023/vob.ws2.js', '/vob.ws2.js', '~/2023/vueObjectBuilder.js', '~/2023/parse.js', '~/.vim/ftplugin/math.vim', '~/2023/wrappers.js', '~/2023/data.txt', '~/2023/TypeAssertion.js', '~/2023/server.js', '~/2023/simpleServer.js', '~/2023/Interactive.js', '~/2023/globals.js', '~/2023/x.js', '~/CWF/public/puppet.js', '/usr/share/vim/vim82/doc/eval.txt', '~/CWF/utils.js', '~/2023/advanced.js', '~/2023/birdRouter.js', '~/2023/linearAlgebra.js', '~/2023/todo.js', '~/JSONS/emojis.json', '~/CWF/public/today.js', '~/CWF/public/_lego-loader.js', '~/CWF/public/ec.js', '~/CWF/public/lego.js', '~/CWF/public/lezer-utils.js', '~/2023/vobject.js', '~/2023/splitKatex.js', '~/2023/pac.txt', '~/2023/math.js', '~/2023/base-components.js', '~/CWF/public/html-commands.vim', '~/2023/mu.js', '~/2023/wob.ini.js', '~/2023/wob.ini.txt', '~/CWF/public/nerdamer-utils.js', '~/2023/physics.js', '~/2023/InterfaceAssertion.js', '~/2023/hc', '~/2023/spell', '~/2023/gac.txt', '~/2023/hammyDialogue.js', '~/2023/base.py', '/usr/share/vim/vim82/doc/intro.txt', '/usr/share/vim/vim82/doc/various.txt', '~/PYTHON/githubscript.py', '~/FIREBASE/public/index.html', '~/FIREBASE/.firebaserc', '~/FIREBASE/database.rules.json', '~/FIREBASE/firebase-debug.log', '~/FIREBASE/index.html', '~/2023/file-table.txt', '~/2023/test.js', '~/2023/wob.worksheet.js', '~/2023/mathcha.js', '~/2023/vueComponentWrappers.js', '~/2023/birthdayAnnouncements.js', '~/2023/fraction.js', '~/2023/mathgen.js', '~/2023/latexTree.js', '~/2023/data.js', '~/2023/data-parsers.deprecated.js', '~/2023/vue-directives.js', '~/2023/studentNames.json', '~/2023/spellcheck.json', '~/2023/geometry.shapes.js', '~/2023/asdf.js', '~/2023/null.js', '~/2023/ofile.js', '~/2023/tt.js', '~/2023/Templates.txt.js', '~/2023/shunt.js', '~/2023/svg.js', '~/2023/vim.js', '~/2023/compiled.js', '~/2023/googleApps.js', '~/2023/googleAppConnector.js', '~/2023/organizePython.js', '~/2023/ElementController.js', '~/2023/vue-shortcuts.js', '~/2023/VoiceRecorder.js', '~/2023/exam.js', '~/2023/Prettier.js', '~/2023/VueRenderer.js', '~/2023/grader.js', '~/2023/hello_world.js', '~/2023/pdf.js', '~/2023/ProblemGenerator.js', '~/2023/QuestionGenerator.js', '~/2023/mathgen.config.js', '~/2023/comments.school.txt', '~/2023/dialogue.js', '~/2023/markdown.js', '~/CWF/public/h.js', '~/2023/env.js', '~/2023/hammy.txt', '/hammy.txt', '~/2023/announcements.txt', '~/2023/gold-star-worksheets.txt', '~/2023/wob.wor', '~/CWF/class.js', '~/CWF/public/chroma.min.js', '~/2023/ar', '~/2023/app.ts', '~/2023/hello_world.ts', '~/PYTHON/scratchpad.py', '~/2023/googleAppScript.js', '~/JAVASCRIPT/app-main.js', '~/2023/-1', '~/2023/classwork.txt', '~/2023/report-cards.txt', '~/.vim/ftplugin/txt.vim', '~/2023/positive-statements.school.txt', '~/2023/grades.txt', '~/2023/grade-reports.txt', '~/2023/progress-reports.txt', '~/2023/classwork.school.txt', '~/2023/animations.js', '~/2023/katex.min.css', '/usr/share/vim/vim82/doc/change.txt', '~/2023/vdata', '~/TEXTS/math.archive.txt', '~/2023/unit-tests.js', '~/PYTHON/parse.py', '~/PYTHON/compile_latex.py', '~/CWF/public/app-utils.js', '~/2023/pdfjs/web/viewer.js', '~/2023/appscript.js', '~/2023/pdfjs/web/viewer.html', '/web/viewer.js', '~/2023/parseGrades.js', '~/2023/studentRouter.js', '~/2023/log.txt', '~/2023/config.ini.txt', '~/2023/today.json', '~/2023/classroomBirthdays.js', '~/2023/classroomBirthdayAnnouncements.js', '~/2023/ini.js', '~/2023/TEXTS/scratchpad.txt', '~/2023/raw-math.txt', '~/2023/fonts.css', '~/PYTHON/tesseract.py', '~/.vim/ftplugin/python.vim', '~/2023/scratchpad.txt', '~/CWF/public/node-utils.js', '~/PYTHON/heif.py', '~/2023/today.txt', '~/2023/m.txt', '~/2023/math.txt', '~/2023/mathgen.config.txt', '~/CWF/public/math.config.txt', '~/PYTHON/announce.py', '~/CWF/public/math.config.js', '~/2023/math.config.js', '~/2023/mu', '~/2023/popped.txt', '~/2023/popp', '~/CWF/public/TextEditor.js', '~/TEXTS/m.txt', '~/2023/answerPattern.js', '/latexTree.js', '~/2023/today.js', '~/2023/mg', '~/CWF/public/clip2.js', '~/2023/vuetify.js', '~/2023/data-parsers.js', '~/2023/hammymathclass.txt', '~/.vim/ftplugin/markdown.vim', '~/2023/utils.js.json', '~/CWF/public/print.js', '~/2023/main.j', '~/2023/temp.html', '~/2023/reportCardConfig.js', '~/2023/spring2023.grades.json', '~/CWF/public/class4.js', '~/2023/fixGender.js', '~/2023/run-tests.js', '~/2023/tests.js', '~/2023/pfg', '~/2023/class4.js', '/mnt/chromeos/GoogleDrive/MyDrive/cwt_scores_autumn2022.json', '~/2023/render.js', '~/CWF/public/asd', '~/2023/render.css', '~/2023/[codeOrganizer.js', '~/2023/console.log', '~/CWF/public/css-utils.js', '~/2023/report-cards.json', '~/2023/getImplied.js', '~/2023/todo.txt', '~/2023/reddit.txt', '/grades.txt', '~/2023/hash.txt', '~/2023/hash', '~/2023/hashnotes.txt', '~/PYTHON/log.json', '~/PYTHON/parse_mathcha_html.py', '~/PYTHON/python.json', '~/PYTHON/print2.py', '~/2023/ss', '~/2023/chatgpt.txt', '~/2023/mathcha/index.html', '~/PYTHON/test.py']
v:dying               #0
v:windowid            #0
v:mouse_winid         #0
v:termresponse         ^[[>0;256;0c
v:argv                ['vim', '/home/kdog3682/.vimrc']
v:fcs_choice           
v:lang                 en_US.UTF-8
v:t_none              #7
v:count               #0
v:progpath             /usr/bin/vim.basic
v:fcs_reason           conflict
v:true                 v:true
v:t_string            #1
v:none                 v:none
v:progname             vim
v:t_bool              #6
v:t_number            #0
v:numbersize          #64
v:vim_did_enter       #1
v:echospace           #78
v:cmdbang             #0
v:foldlevel           #0
v:t_func              #2
v:operator             d
v:ctype                en_US.UTF-8
v:t_job               #8
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:collate              en_US.UTF-8
v:exiting              v:null
v:profiling           #0
v:t_float             #5
v:beval_col           #0
v:errmsg               E89: No write since last change for buffer 47 (add ! to override)
v:beval_lnum          #0
v:mouse_lnum          #0
v:insertmode           i
v:completed_item      {}
v:numbermin           #-9223372036854775808
v:t_blob              #10
v:t_dict              #4
v:t_list              #3
v:false                v:false
v:numbermax           #9223372036854775807
v:beval_bufnr         #0
v:shell_error         #0
v:testing             #0
v:lc_time              en_US.UTF-8
v:searchforward       #1
v:event               {}
v:mouse_col           #0
v:statusmsg            "~/.vimrc" 8410L, 240170B written
v:warningmsg           search hit BOTTOM, continuing at TOP